{"version":3,"file":"TrainingView-CyGNwCIP.js","sources":["../../src/components/TrainingSession.jsx","../../src/components/CommunityHub.jsx","../../src/components/BiometricIntegration.jsx","../../src/components/DrillLibrary.jsx","../../src/components/DrillDetail.jsx","../../src/components/TrainingCalendar.jsx","../../src/components/ProgressTracker.jsx","../../src/components/WeeklyChallenges.jsx","../../src/components/OfflineWorkouts.jsx","../../src/views/TrainingView.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst TrainingSession = ({ category, onBack, onComplete }) => {\n  const [currentDrill, setCurrentDrill] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [reps, setReps] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [formScore, setFormScore] = useState(0);\n  const [showAROverlay, setShowAROverlay] = useState(false);\n  const [cameraPermission, setCameraPermission] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  // Training drills data based on category\n  const drillSets = {\n    routes: [\n      {\n        name: 'Quick Slant',\n        description: 'Sharp 5-yard cut at precise timing',\n        duration: 30,\n        reps: 8,\n        difficulty: 'Beginner',\n        keyPoints: ['Sharp plant foot', 'Quick hip turn', 'Hands ready'],\n        video: '/videos/quick-slant.mp4',\n        arMarkers: [\n          { x: 50, y: 60, label: 'Plant foot here' },\n          { x: 70, y: 40, label: 'Cut direction' }\n        ]\n      },\n      {\n        name: 'Double Move',\n        description: 'Fake inside, break outside at 8 yards',\n        duration: 45,\n        reps: 6,\n        difficulty: 'Advanced',\n        keyPoints: ['Sell the first move', 'Explosive second cut', 'Maintain speed'],\n        video: '/videos/double-move.mp4',\n        arMarkers: [\n          { x: 50, y: 70, label: 'First fake' },\n          { x: 80, y: 30, label: 'Real break' }\n        ]\n      },\n      {\n        name: 'Comeback Route',\n        description: 'Drive 12 yards, turn and settle',\n        duration: 40,\n        reps: 5,\n        difficulty: 'Intermediate',\n        keyPoints: ['Full speed drive', 'Quick turn', 'Present target'],\n        video: '/videos/comeback.mp4',\n        arMarkers: [\n          { x: 50, y: 20, label: 'Turn point' },\n          { x: 50, y: 60, label: 'Settle here' }\n        ]\n      }\n    ],\n    plyometrics: [\n      {\n        name: 'Depth Jumps',\n        description: 'Step off box, land and explode up',\n        duration: 45,\n        reps: 10,\n        difficulty: 'Intermediate',\n        keyPoints: ['Soft landing', 'Immediate explosion', 'Full extension'],\n        video: '/videos/depth-jumps.mp4',\n        arMarkers: [\n          { x: 50, y: 80, label: 'Landing zone' },\n          { x: 50, y: 20, label: 'Max height' }\n        ]\n      },\n      {\n        name: 'Lateral Bounds',\n        description: 'Single-leg lateral jumps with hold',\n        duration: 35,\n        reps: 12,\n        difficulty: 'Beginner',\n        keyPoints: ['Single leg power', 'Stable landing', 'Opposite arm drive'],\n        video: '/videos/lateral-bounds.mp4',\n        arMarkers: [\n          { x: 30, y: 50, label: 'Left target' },\n          { x: 70, y: 50, label: 'Right target' }\n        ]\n      }\n    ],\n    sprints: [\n      {\n        name: 'Acceleration Sprints',\n        description: '20-yard builds from 0 to max speed',\n        duration: 60,\n        reps: 6,\n        difficulty: 'Intermediate',\n        keyPoints: ['Low start position', 'Gradual rise', 'Pump arms'],\n        video: '/videos/acceleration.mp4',\n        arMarkers: [\n          { x: 10, y: 50, label: 'Start' },\n          { x: 90, y: 50, label: 'Finish' }\n        ]\n      }\n    ]\n  };\n\n  const currentDrillSet = drillSets[category] || drillSets.routes;\n  const drill = currentDrillSet[currentDrill];\n\n  // AI Form Analysis simulation\n  const analyzeForm = () => {\n    setIsAnalyzing(true);\n    \n    // Simulate AI analysis\n    setTimeout(() => {\n      const score = Math.floor(Math.random() * 40) + 60; // 60-100 score\n      setFormScore(score);\n      \n      const feedbackMessages = [\n        \"Excellent form! Your timing is perfect.\",\n        \"Good execution. Try to keep your head up more.\",\n        \"Strong effort! Focus on explosive first step.\",\n        \"Nice work! Your balance has improved significantly.\",\n        \"Great technique! Try to pump your arms more actively.\"\n      ];\n      \n      setFeedback(feedbackMessages[Math.floor(Math.random() * feedbackMessages.length)]);\n      setIsAnalyzing(false);\n    }, 2000);\n  };\n\n  // Timer functionality\n  useEffect(() => {\n    if (isActive && timer > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (timer === 0 && isActive) {\n      setIsActive(false);\n      analyzeForm();\n    }\n    \n    return () => clearInterval(intervalRef.current);\n  }, [isActive, timer]);\n\n  // Camera setup for AR overlay\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n        setCameraPermission(true);\n      } catch (error) {\n        console.error('Camera access denied:', error);\n      }\n    };\n\n    if (showAROverlay) {\n      setupCamera();\n    }\n  }, [showAROverlay]);\n\n  const startDrill = () => {\n    setTimer(drill.duration);\n    setIsActive(true);\n    setReps(0);\n    setFeedback('');\n    setFormScore(0);\n  };\n\n  const nextDrill = () => {\n    if (currentDrill < currentDrillSet.length - 1) {\n      setCurrentDrill(currentDrill + 1);\n    } else {\n      onComplete({\n        category,\n        drillsCompleted: currentDrillSet.length,\n        avgFormScore: formScore,\n        totalTime: currentDrillSet.reduce((sum, drill) => sum + drill.duration, 0)\n      });\n    }\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'Beginner': return 'text-green-400';\n      case 'Intermediate': return 'text-yellow-400';\n      case 'Advanced': return 'text-red-400';\n      default: return 'text-gray-400';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Training</span>\n          </button>\n          <div className=\"text-sm text-blue-200\">\n            Drill {currentDrill + 1} of {currentDrillSet.length}\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Video/AR Section */}\n          <div className=\"space-y-4\">\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-xl font-bold\">Training Video</h2>\n                <button\n                  onClick={() => setShowAROverlay(!showAROverlay)}\n                  className={`px-4 py-2 rounded-lg font-semibold transition-colors ${\n                    showAROverlay \n                      ? 'bg-purple-600 hover:bg-purple-700' \n                      : 'bg-blue-600 hover:bg-blue-700'\n                  }`}\n                >\n                  {showAROverlay ? 'Hide AR' : 'Show AR'}\n                </button>\n              </div>\n              \n              {/* Video Container */}\n              <div className=\"relative bg-gray-800 rounded-xl aspect-video overflow-hidden\">\n                {showAROverlay && cameraPermission ? (\n                  <div className=\"relative w-full h-full\">\n                    <video\n                      ref={videoRef}\n                      autoPlay\n                      playsInline\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <canvas\n                      ref={canvasRef}\n                      className=\"absolute inset-0 w-full h-full\"\n                    />\n                    {/* AR Markers */}\n                    {drill.arMarkers.map((marker, index) => (\n                      <div\n                        key={index}\n                        className=\"absolute bg-yellow-400 text-black px-2 py-1 rounded-lg text-xs font-semibold animate-pulse\"\n                        style={{\n                          left: `${marker.x}%`,\n                          top: `${marker.y}%`,\n                          transform: 'translate(-50%, -50%)'\n                        }}\n                      >\n                        {marker.label}\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"w-full h-full flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <svg className=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M8.267 14.68c-.184 0-.308-.018-.372-.036A1.533 1.533 0 0 1 6.5 13.133V6.867a1.533 1.533 0 0 1 1.395-1.511c.064-.018.188-.036.372-.036.964 0 1.733.794 1.733 1.774v5.804c0 .98-.769 1.774-1.733 1.774z\"/>\n                        </svg>\n                      </div>\n                      <p className=\"text-gray-300\">Video: {drill.name}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Form Analysis */}\n            {(formScore > 0 || isAnalyzing) && (\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n                <h3 className=\"text-lg font-bold mb-4\">🤖 AI Form Analysis</h3>\n                {isAnalyzing ? (\n                  <div className=\"text-center\">\n                    <div className=\"animate-spin w-8 h-8 border-2 border-blue-500 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                    <p className=\"text-blue-200\">Analyzing your form...</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span>Form Score</span>\n                      <span className={`text-2xl font-bold ${\n                        formScore >= 90 ? 'text-green-400' : \n                        formScore >= 70 ? 'text-yellow-400' : 'text-red-400'\n                      }`}>\n                        {formScore}/100\n                      </span>\n                    </div>\n                    <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                      <div \n                        className={`h-2 rounded-full transition-all duration-1000 ${\n                          formScore >= 90 ? 'bg-green-400' : \n                          formScore >= 70 ? 'bg-yellow-400' : 'bg-red-400'\n                        }`}\n                        style={{ width: `${formScore}%` }}\n                      ></div>\n                    </div>\n                    <p className=\"text-blue-200 text-sm\">{feedback}</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Drill Details */}\n          <div className=\"space-y-4\">\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-2xl font-bold\">{drill.name}</h2>\n                <span className={`text-sm font-semibold ${getDifficultyColor(drill.difficulty)}`}>\n                  {drill.difficulty}\n                </span>\n              </div>\n              \n              <p className=\"text-blue-200 mb-6\">{drill.description}</p>\n              \n              {/* Key Points */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold mb-3\">Key Points:</h3>\n                <ul className=\"space-y-2\">\n                  {drill.keyPoints.map((point, index) => (\n                    <li key={index} className=\"flex items-center space-x-2\">\n                      <span className=\"text-yellow-400\">•</span>\n                      <span className=\"text-blue-200\">{point}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              {/* Timer and Controls */}\n              <div className=\"space-y-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-6xl font-bold text-blue-400 mb-2\">\n                    {Math.floor(timer / 60)}:{(timer % 60).toString().padStart(2, '0')}\n                  </div>\n                  <p className=\"text-blue-200\">\n                    {isActive ? 'Time Remaining' : 'Duration'}: {drill.duration}s\n                  </p>\n                </div>\n\n                <div className=\"flex items-center justify-center space-x-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-yellow-400\">{reps}</div>\n                    <div className=\"text-sm text-blue-200\">Reps</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-400\">{drill.reps}</div>\n                    <div className=\"text-sm text-blue-200\">Target</div>\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-4\">\n                  {!isActive && timer === 0 ? (\n                    <button\n                      onClick={startDrill}\n                      className=\"flex-1 bg-green-600 hover:bg-green-700 py-3 rounded-lg font-semibold transition-colors\"\n                    >\n                      Start Drill\n                    </button>\n                  ) : (\n                    <button\n                      onClick={() => setIsActive(!isActive)}\n                      className={`flex-1 py-3 rounded-lg font-semibold transition-colors ${\n                        isActive \n                          ? 'bg-red-600 hover:bg-red-700' \n                          : 'bg-blue-600 hover:bg-blue-700'\n                      }`}\n                    >\n                      {isActive ? 'Pause' : 'Resume'}\n                    </button>\n                  )}\n                  \n                  <button\n                    onClick={() => setReps(reps + 1)}\n                    className=\"px-6 py-3 bg-yellow-600 hover:bg-yellow-700 rounded-lg font-semibold transition-colors\"\n                  >\n                    +1 Rep\n                  </button>\n                </div>\n\n                {formScore > 0 && (\n                  <button\n                    onClick={nextDrill}\n                    className=\"w-full bg-purple-600 hover:bg-purple-700 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    {currentDrill < currentDrillSet.length - 1 ? 'Next Drill' : 'Complete Session'}\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainingSession;","import React, { useState, useEffect } from 'react';\n\nconst CommunityHub = ({ onClose }) => {\n  const [activeTab, setActiveTab] = useState('feed');\n  const [liveUsers, setLiveUsers] = useState([]);\n  const [challenges, setChallenges] = useState([]);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [groupSessions, setGroupSessions] = useState([]);\n\n  // Sample data\n  const sampleFeed = [\n    {\n      id: 1,\n      user: 'Alex Rodriguez',\n      avatar: '🏃‍♂️',\n      action: 'just crushed a 40-yard dash',\n      time: '2 minutes ago',\n      media: 'video',\n      stats: { time: '4.35s', improvement: '+0.12s' },\n      likes: 23,\n      comments: 5,\n      location: 'Training Field A'\n    },\n    {\n      id: 2,\n      user: 'Maya Chen',\n      avatar: '⚡',\n      action: 'completed Elite Route Package',\n      time: '15 minutes ago',\n      media: 'image',\n      stats: { accuracy: '94%', routes: 12 },\n      likes: 18,\n      comments: 8,\n      achievement: 'Route Master Badge Earned!'\n    },\n    {\n      id: 3,\n      user: 'Coach Martinez',\n      avatar: '🎯',\n      action: 'shared a pro tip',\n      time: '1 hour ago',\n      media: 'text',\n      content: 'The key to a perfect slant route is the timing of your head turn. Turn too early and you telegraph the route. Turn at the exact moment of your cut for maximum effectiveness.',\n      likes: 47,\n      comments: 15,\n      isPro: true\n    },\n    {\n      id: 4,\n      user: 'Team Lightning',\n      avatar: '⚡',\n      action: 'started a group training session',\n      time: '2 hours ago',\n      media: 'live',\n      participants: 8,\n      maxParticipants: 12,\n      likes: 12,\n      comments: 3,\n      isLive: true\n    }\n  ];\n\n  const sampleLiveUsers = [\n    { id: 1, name: 'Alex R.', avatar: '🏃‍♂️', activity: 'Route Running', level: 'Pro' },\n    { id: 2, name: 'Maya C.', avatar: '⚡', activity: 'Speed Training', level: 'Expert' },\n    { id: 3, name: 'Jordan K.', avatar: '🎯', activity: 'Catching Drills', level: 'Beginner' },\n    { id: 4, name: 'Coach M.', avatar: '🏆', activity: 'Coaching Session', level: 'Master' },\n    { id: 5, name: 'Sarah L.', avatar: '💪', activity: 'Strength Training', level: 'Intermediate' }\n  ];\n\n  const sampleChallenges = [\n    {\n      id: 1,\n      title: 'Speed Demon Week',\n      description: 'Improve your 40-yard dash time by 0.1s',\n      participants: 234,\n      timeLeft: '3 days',\n      reward: '500 XP + Speed Badge',\n      difficulty: 'Medium',\n      category: 'Speed',\n      joined: false\n    },\n    {\n      id: 2,\n      title: 'Route Precision Challenge',\n      description: 'Complete 50 routes with 90%+ accuracy',\n      participants: 156,\n      timeLeft: '1 week',\n      reward: '750 XP + Precision Master Badge',\n      difficulty: 'Hard',\n      category: 'Routes',\n      joined: true\n    },\n    {\n      id: 3,\n      title: 'Team Builder',\n      description: 'Train with 10 different teammates',\n      participants: 89,\n      timeLeft: '2 weeks',\n      reward: '300 XP + Social Badge',\n      difficulty: 'Easy',\n      category: 'Social',\n      joined: false\n    }\n  ];\n\n  const sampleLeaderboard = [\n    { rank: 1, name: 'Alex Rodriguez', avatar: '🏃‍♂️', score: 2847, streak: 15, badge: '👑' },\n    { rank: 2, name: 'Maya Chen', avatar: '⚡', score: 2653, streak: 12, badge: '🥈' },\n    { rank: 3, name: 'Jordan Kim', avatar: '🎯', score: 2534, streak: 8, badge: '🥉' },\n    { rank: 4, name: 'Sarah Lopez', avatar: '💪', score: 2389, streak: 6, badge: '🏅' },\n    { rank: 5, name: 'You', avatar: '🔥', score: 2156, streak: 7, badge: '⭐', isUser: true }\n  ];\n\n  const sampleGroupSessions = [\n    {\n      id: 1,\n      title: 'Elite Route Running Masterclass',\n      host: 'Coach Martinez',\n      participants: 8,\n      maxParticipants: 12,\n      startTime: '6:00 PM',\n      duration: '90 min',\n      level: 'Advanced',\n      category: 'Routes',\n      isLive: true\n    },\n    {\n      id: 2,\n      title: 'Beginner Speed Training',\n      host: 'Maya Chen',\n      participants: 6,\n      maxParticipants: 10,\n      startTime: '7:30 PM',\n      duration: '60 min',\n      level: 'Beginner',\n      category: 'Speed',\n      isLive: false\n    },\n    {\n      id: 3,\n      title: 'Team Lightning Practice',\n      host: 'Team Lightning',\n      participants: 11,\n      maxParticipants: 15,\n      startTime: '8:00 PM',\n      duration: '120 min',\n      level: 'All Levels',\n      category: 'Team',\n      isLive: false\n    }\n  ];\n\n  useEffect(() => {\n    setLiveUsers(sampleLiveUsers);\n    setChallenges(sampleChallenges);\n    setLeaderboard(sampleLeaderboard);\n    setGroupSessions(sampleGroupSessions);\n  }, []);\n\n  const handleLike = (postId) => {\n    // In a real app, this would update the backend\n    console.log('Liked post:', postId);\n  };\n\n  const handleJoinChallenge = (challengeId) => {\n    setChallenges(prev => \n      prev.map(challenge => \n        challenge.id === challengeId \n          ? { ...challenge, joined: !challenge.joined, participants: challenge.joined ? challenge.participants - 1 : challenge.participants + 1 }\n          : challenge\n      )\n    );\n  };\n\n  const handleJoinSession = (sessionId) => {\n    console.log('Joining session:', sessionId);\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'Easy': return 'text-green-400 bg-green-400/20';\n      case 'Medium': return 'text-yellow-400 bg-yellow-400/20';\n      case 'Hard': return 'text-red-400 bg-red-400/20';\n      default: return 'text-gray-400 bg-gray-400/20';\n    }\n  };\n\n  const renderFeed = () => (\n    <div className=\"space-y-6\">\n      {sampleFeed.map((post) => (\n        <div key={post.id} className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-xl\">\n              {post.avatar}\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-semibold\">{post.user}</span>\n                {post.isPro && <span className=\"bg-yellow-400 text-black px-2 py-1 rounded-full text-xs font-semibold\">PRO</span>}\n                <span className=\"text-gray-400 text-sm\">{post.time}</span>\n              </div>\n              \n              <p className=\"text-blue-200 mb-3\">\n                {post.action}\n                {post.location && <span className=\"text-gray-400\"> at {post.location}</span>}\n              </p>\n\n              {post.content && (\n                <p className=\"text-white bg-blue-600/20 p-3 rounded-lg mb-3 italic\">\n                  \"{post.content}\"\n                </p>\n              )}\n\n              {post.achievement && (\n                <div className=\"bg-gradient-to-r from-yellow-400 to-orange-500 text-black px-3 py-1 rounded-full text-sm font-semibold mb-3 inline-block\">\n                  🏆 {post.achievement}\n                </div>\n              )}\n\n              {post.stats && (\n                <div className=\"flex space-x-4 mb-3\">\n                  {Object.entries(post.stats).map(([key, value]) => (\n                    <div key={key} className=\"bg-white/10 px-3 py-1 rounded-lg\">\n                      <span className=\"text-gray-400 text-sm capitalize\">{key}: </span>\n                      <span className=\"text-white font-semibold\">{value}</span>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {post.isLive && (\n                <div className=\"bg-red-500 text-white px-3 py-1 rounded-full text-sm font-semibold mb-3 inline-block animate-pulse\">\n                  🔴 LIVE\n                </div>\n              )}\n\n              <div className=\"flex items-center space-x-6 text-sm text-gray-400\">\n                <button\n                  onClick={() => handleLike(post.id)}\n                  className=\"flex items-center space-x-2 hover:text-red-400 transition-colors\"\n                >\n                  <span>❤️</span>\n                  <span>{post.likes}</span>\n                </button>\n                <button className=\"flex items-center space-x-2 hover:text-blue-400 transition-colors\">\n                  <span>💬</span>\n                  <span>{post.comments}</span>\n                </button>\n                <button className=\"flex items-center space-x-2 hover:text-green-400 transition-colors\">\n                  <span>🔄</span>\n                  <span>Share</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderChallenges = () => (\n    <div className=\"space-y-4\">\n      {challenges.map((challenge) => (\n        <div key={challenge.id} className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div>\n              <h3 className=\"text-xl font-bold mb-2\">{challenge.title}</h3>\n              <p className=\"text-blue-200 mb-4\">{challenge.description}</p>\n            </div>\n            <div className={`px-3 py-1 rounded-full text-sm font-semibold ${getDifficultyColor(challenge.difficulty)}`}>\n              {challenge.difficulty}\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\n            <div className=\"text-center\">\n              <div className=\"text-lg font-bold text-blue-400\">{challenge.participants}</div>\n              <div className=\"text-xs text-gray-400\">Participants</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-lg font-bold text-yellow-400\">{challenge.timeLeft}</div>\n              <div className=\"text-xs text-gray-400\">Time Left</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-lg font-bold text-green-400\">{challenge.category}</div>\n              <div className=\"text-xs text-gray-400\">Category</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-lg font-bold text-purple-400\">{challenge.reward.split(' ')[0]}</div>\n              <div className=\"text-xs text-gray-400\">Reward</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-400\">{challenge.reward}</span>\n            <button\n              onClick={() => handleJoinChallenge(challenge.id)}\n              className={`px-6 py-2 rounded-lg font-semibold transition-colors ${\n                challenge.joined \n                  ? 'bg-green-600 hover:bg-green-700 text-white' \n                  : 'bg-blue-600 hover:bg-blue-700 text-white'\n              }`}\n            >\n              {challenge.joined ? 'Joined ✓' : 'Join Challenge'}\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderLeaderboard = () => (\n    <div className=\"space-y-4\">\n      {leaderboard.map((user) => (\n        <div key={user.rank} className={`bg-white/10 backdrop-blur-sm rounded-2xl p-4 ${user.isUser ? 'ring-2 ring-blue-400' : ''}`}>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-2xl\">{user.badge}</div>\n            <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full flex items-center justify-center\">\n              {user.avatar}\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"font-semibold\">{user.name}</span>\n                {user.isUser && <span className=\"text-blue-400 text-sm\">(You)</span>}\n              </div>\n              <div className=\"text-sm text-gray-400\">\n                {user.score} points • {user.streak} day streak\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-blue-400\">#{user.rank}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderGroupSessions = () => (\n    <div className=\"space-y-4\">\n      {groupSessions.map((session) => (\n        <div key={session.id} className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div>\n              <h3 className=\"text-xl font-bold mb-2\">{session.title}</h3>\n              <p className=\"text-blue-200 mb-2\">Hosted by {session.host}</p>\n              <div className=\"flex items-center space-x-4 text-sm text-gray-400\">\n                <span>🕒 {session.startTime}</span>\n                <span>⏱️ {session.duration}</span>\n                <span>📊 {session.level}</span>\n              </div>\n            </div>\n            {session.isLive && (\n              <div className=\"bg-red-500 text-white px-3 py-1 rounded-full text-sm font-semibold animate-pulse\">\n                🔴 LIVE\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-gray-400\">\n              {session.participants}/{session.maxParticipants} participants\n            </div>\n            <button\n              onClick={() => handleJoinSession(session.id)}\n              className={`px-6 py-2 rounded-lg font-semibold transition-colors ${\n                session.isLive \n                  ? 'bg-red-600 hover:bg-red-700 text-white' \n                  : 'bg-blue-600 hover:bg-blue-700 text-white'\n              }`}\n            >\n              {session.isLive ? 'Join Live' : 'Join Session'}\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-gradient-to-br from-gray-900 to-blue-900 rounded-3xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n        <div className=\"p-6 border-b border-white/10\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-2xl font-bold text-white\">Community Hub</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          <div className=\"flex space-x-4 mt-4\">\n            {[\n              { id: 'feed', label: 'Feed', icon: '📱' },\n              { id: 'challenges', label: 'Challenges', icon: '🎯' },\n              { id: 'leaderboard', label: 'Leaderboard', icon: '🏆' },\n              { id: 'sessions', label: 'Live Sessions', icon: '🔴' }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${\n                  activeTab === tab.id \n                    ? 'bg-blue-600 text-white' \n                    : 'text-gray-400 hover:text-white'\n                }`}\n              >\n                <span>{tab.icon}</span>\n                <span>{tab.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-200px)]\">\n          {activeTab === 'feed' && renderFeed()}\n          {activeTab === 'challenges' && renderChallenges()}\n          {activeTab === 'leaderboard' && renderLeaderboard()}\n          {activeTab === 'sessions' && renderGroupSessions()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommunityHub;","import React, { useState, useEffect } from 'react';\n\nconst BiometricIntegration = ({ onRecommendation }) => {\n  const [heartRate, setHeartRate] = useState(0);\n  const [isConnected, setIsConnected] = useState(false);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [recoveryScore, setRecoveryScore] = useState(0);\n  const [recommendations, setRecommendations] = useState([]);\n\n  // Simulate biometric data\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Simulate heart rate (60-180 BPM)\n      setHeartRate(Math.floor(Math.random() * 120) + 60);\n      \n      // Simulate sleep score (0-100)\n      setSleepScore(Math.floor(Math.random() * 30) + 70);\n      \n      // Simulate recovery score (0-100)\n      setRecoveryScore(Math.floor(Math.random() * 40) + 60);\n      \n      setIsConnected(true);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Generate AI recommendations based on biometric data\n  useEffect(() => {\n    if (heartRate > 0 && sleepScore > 0 && recoveryScore > 0) {\n      const newRecommendations = generateRecommendations(heartRate, sleepScore, recoveryScore);\n      setRecommendations(newRecommendations);\n      onRecommendation(newRecommendations);\n    }\n  }, [heartRate, sleepScore, recoveryScore]);\n\n  const generateRecommendations = (hr, sleep, recovery) => {\n    const recs = [];\n\n    // Heart rate based recommendations\n    if (hr > 100) {\n      recs.push({\n        type: 'warning',\n        title: 'Elevated Heart Rate',\n        message: 'Your resting heart rate is elevated. Consider light recovery work today.',\n        action: 'Switch to yoga or stretching',\n        priority: 'high'\n      });\n    } else if (hr < 70) {\n      recs.push({\n        type: 'positive',\n        title: 'Great Recovery',\n        message: 'Your heart rate indicates excellent recovery. Perfect for high-intensity training!',\n        action: 'Try advanced sprint drills',\n        priority: 'medium'\n      });\n    }\n\n    // Sleep based recommendations\n    if (sleep < 70) {\n      recs.push({\n        type: 'warning',\n        title: 'Poor Sleep Quality',\n        message: 'Your sleep score is low. Focus on technique over intensity today.',\n        action: 'Reduce training intensity by 30%',\n        priority: 'high'\n      });\n    } else if (sleep > 85) {\n      recs.push({\n        type: 'positive',\n        title: 'Excellent Sleep',\n        message: 'Great sleep quality! Your body is ready for challenging workouts.',\n        action: 'Perfect day for skill development',\n        priority: 'low'\n      });\n    }\n\n    // Recovery based recommendations\n    if (recovery < 60) {\n      recs.push({\n        type: 'warning',\n        title: 'Low Recovery Score',\n        message: 'Your body needs more recovery time. Consider active rest.',\n        action: 'Focus on mobility and light cardio',\n        priority: 'high'\n      });\n    } else if (recovery > 80) {\n      recs.push({\n        type: 'positive',\n        title: 'Fully Recovered',\n        message: 'Your recovery metrics are excellent. Time to push your limits!',\n        action: 'Increase training intensity',\n        priority: 'medium'\n      });\n    }\n\n    return recs;\n  };\n\n  const getScoreColor = (score) => {\n    if (score >= 80) return 'text-green-400';\n    if (score >= 60) return 'text-yellow-400';\n    return 'text-red-400';\n  };\n\n  const getRecommendationStyle = (type) => {\n    switch (type) {\n      case 'warning':\n        return 'bg-red-500/20 border-red-500 text-red-100';\n      case 'positive':\n        return 'bg-green-500/20 border-green-500 text-green-100';\n      default:\n        return 'bg-blue-500/20 border-blue-500 text-blue-100';\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Connection Status */}\n      <div className=\"flex items-center justify-between p-4 bg-white/10 backdrop-blur-sm rounded-xl\">\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'}`}></div>\n          <span className=\"text-sm font-medium\">\n            {isConnected ? 'Biometric sensors connected' : 'Connecting to sensors...'}\n          </span>\n        </div>\n        <button className=\"text-blue-400 hover:text-blue-300 text-sm\">\n          Configure\n        </button>\n      </div>\n\n      {/* Biometric Data */}\n      {isConnected && (\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-4 text-center\">\n            <div className=\"text-2xl font-bold text-red-400\">{heartRate}</div>\n            <div className=\"text-sm text-gray-400\">Heart Rate</div>\n            <div className=\"text-xs text-gray-500\">BPM</div>\n          </div>\n          <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-4 text-center\">\n            <div className={`text-2xl font-bold ${getScoreColor(sleepScore)}`}>{sleepScore}</div>\n            <div className=\"text-sm text-gray-400\">Sleep Score</div>\n            <div className=\"text-xs text-gray-500\">Last night</div>\n          </div>\n          <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-4 text-center\">\n            <div className={`text-2xl font-bold ${getScoreColor(recoveryScore)}`}>{recoveryScore}</div>\n            <div className=\"text-sm text-gray-400\">Recovery</div>\n            <div className=\"text-xs text-gray-500\">Current</div>\n          </div>\n        </div>\n      )}\n\n      {/* AI Recommendations */}\n      {recommendations.length > 0 && (\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-semibold text-white\">🤖 AI Recommendations</h3>\n          {recommendations.map((rec, index) => (\n            <div\n              key={index}\n              className={`p-4 rounded-xl border ${getRecommendationStyle(rec.type)}`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <h4 className=\"font-semibold mb-1\">{rec.title}</h4>\n                  <p className=\"text-sm opacity-90 mb-2\">{rec.message}</p>\n                  <div className=\"text-xs opacity-75\">\n                    Recommended action: {rec.action}\n                  </div>\n                </div>\n                <div className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  rec.priority === 'high' ? 'bg-red-500 text-white' :\n                  rec.priority === 'medium' ? 'bg-yellow-500 text-black' :\n                  'bg-blue-500 text-white'\n                }`}>\n                  {rec.priority}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button className=\"p-3 bg-blue-600 hover:bg-blue-700 rounded-xl text-sm font-medium transition-colors\">\n          📊 View Detailed Analytics\n        </button>\n        <button className=\"p-3 bg-purple-600 hover:bg-purple-700 rounded-xl text-sm font-medium transition-colors\">\n          ⚙️ Adjust Training Plan\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BiometricIntegration;","import React, { useState, useEffect } from 'react';\n\nconst DrillLibrary = ({ onSelectDrill, selectedCategory = 'all' }) => {\n  const [filteredDrills, setFilteredDrills] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState('all');\n  const [equipmentFilter, setEquipmentFilter] = useState('all');\n\n  // Comprehensive drill database\n  const drillDatabase = [\n    // Route Running Drills\n    {\n      id: 'rr-001',\n      name: 'Quick Slant',\n      category: 'routes',\n      difficulty: 'Beginner',\n      duration: '15 mins',\n      equipment: 'None',\n      space: 'Small (10x10 yards)',\n      description: 'Master the fundamental slant route with precise timing and sharp cuts.',\n      instructions: [\n        'Start in a ready position 5 yards from target',\n        'Take 3 quick steps forward at 75% speed',\n        'Plant your outside foot firmly',\n        'Cut sharply at 45-degree angle',\n        'Accelerate through the cut',\n        'Present hands as target immediately after cut'\n      ],\n      keyPoints: [\n        'Sharp plant foot - no rounding',\n        'Head up throughout the route',\n        'Quick hand presentation',\n        'Accelerate after the cut'\n      ],\n      variations: [\n        'Speed Slant: Increase initial speed to 90%',\n        'Double Slant: Add second cut after 3 more steps',\n        'Comeback Slant: Run 8 yards, then slant back'\n      ],\n      commonMistakes: [\n        'Rounding the cut instead of sharp angle',\n        'Looking back too early',\n        'Slowing down during the cut',\n        'Poor hand positioning'\n      ],\n      videoUrl: '/videos/quick-slant.mp4',\n      thumbnailUrl: '/images/drills/quick-slant.jpg'\n    },\n    {\n      id: 'rr-002',\n      name: 'Double Move Out',\n      category: 'routes',\n      difficulty: 'Advanced',\n      duration: '20 mins',\n      equipment: 'Cones (optional)',\n      space: 'Medium (15x15 yards)',\n      description: 'Deceive defenders with a convincing fake before breaking outside.',\n      instructions: [\n        'Run 6 yards straight at 80% speed',\n        'Fake hard inside with head and shoulders',\n        'Plant inside foot and sell the fake',\n        'Immediately break outside at full speed',\n        'Maintain speed through the break',\n        'Look for ball over outside shoulder'\n      ],\n      keyPoints: [\n        'Sell the first move completely',\n        'Explosive second cut',\n        'Maintain eye contact with QB',\n        'Full speed after break'\n      ],\n      variations: [\n        'In-and-Out: Fake outside, break inside',\n        'Triple Move: Add third directional change',\n        'Speed Double: Increase tempo throughout'\n      ],\n      commonMistakes: [\n        'Not selling the first fake',\n        'Telegraphing the real direction',\n        'Losing speed during transition',\n        'Poor timing with quarterback'\n      ],\n      videoUrl: '/videos/double-move.mp4',\n      thumbnailUrl: '/images/drills/double-move.jpg'\n    },\n\n    // Speed Training Drills\n    {\n      id: 'st-001',\n      name: '40-Yard Dash Technique',\n      category: 'speed',\n      difficulty: 'Intermediate',\n      duration: '25 mins',\n      equipment: 'None',\n      space: 'Large (40+ yards)',\n      description: 'Perfect your 40-yard dash form for maximum speed and efficiency.',\n      instructions: [\n        'Start in 3-point stance, weight forward',\n        'Drive with first 3 steps at 45-degree angle',\n        'Gradually raise body angle over next 7 steps',\n        'Reach full upright position by step 10',\n        'Pump arms in rhythm with legs',\n        'Maintain form through finish line'\n      ],\n      keyPoints: [\n        'Low start position',\n        'Gradual body angle progression',\n        'High knee drive',\n        'Relaxed shoulders'\n      ],\n      variations: [\n        'Flying 40: 10-yard buildup, then 40-yard sprint',\n        'Resistance 40: Use resistance band for first 20 yards',\n        'Interval 40s: Multiple 40s with specific rest periods'\n      ],\n      commonMistakes: [\n        'Standing up too quickly',\n        'Tight shoulders and arms',\n        'Overstriding',\n        'Looking down instead of ahead'\n      ],\n      videoUrl: '/videos/40-yard-dash.mp4',\n      thumbnailUrl: '/images/drills/40-yard-dash.jpg'\n    },\n    {\n      id: 'st-002',\n      name: 'Acceleration Ladders',\n      category: 'speed',\n      difficulty: 'Beginner',\n      duration: '15 mins',\n      equipment: 'Agility ladder or markers',\n      space: 'Medium (20 yards)',\n      description: 'Develop quick feet and acceleration through progressive speed zones.',\n      instructions: [\n        'Set up 4 zones of 5 yards each',\n        'Zone 1: 50% speed, focus on form',\n        'Zone 2: 70% speed, increase tempo',\n        'Zone 3: 85% speed, near max effort',\n        'Zone 4: 95% speed, full acceleration',\n        'Walk back recovery between reps'\n      ],\n      keyPoints: [\n        'Progressive speed increase',\n        'Maintain form at all speeds',\n        'High knee drive',\n        'Pump arms actively'\n      ],\n      variations: [\n        'Lateral Ladders: Side-to-side movement patterns',\n        'Backward Ladders: Reverse direction for each zone',\n        'Single Leg: Alternate legs every other rep'\n      ],\n      commonMistakes: [\n        'Starting too fast',\n        'Poor form at higher speeds',\n        'Insufficient recovery between reps',\n        'Not reaching true max speed'\n      ],\n      videoUrl: '/videos/acceleration-ladders.mp4',\n      thumbnailUrl: '/images/drills/acceleration-ladders.jpg'\n    },\n\n    // Plyometric Drills\n    {\n      id: 'pl-001',\n      name: 'Single Leg Bounds',\n      category: 'plyometrics',\n      difficulty: 'Intermediate',\n      duration: '10 mins',\n      equipment: 'None',\n      space: 'Medium (15 yards)',\n      description: 'Build single-leg power and stability for explosive movements.',\n      instructions: [\n        'Start on right leg in athletic position',\n        'Bound forward landing on same leg',\n        'Hold landing for 2 seconds',\n        'Focus on soft, controlled landing',\n        'Repeat for 5 bounds, then switch legs',\n        'Rest 30 seconds between sets'\n      ],\n      keyPoints: [\n        'Land softly on forefoot',\n        'Maintain balance during hold',\n        'Drive with opposite arm',\n        'Keep chest up and core tight'\n      ],\n      variations: [\n        'Lateral Bounds: Side-to-side movement',\n        'Triple Bounds: Three consecutive bounds',\n        'Bound and Sprint: Add 10-yard sprint after bounds'\n      ],\n      commonMistakes: [\n        'Landing too hard',\n        'Poor balance on landing',\n        'Not using arm drive',\n        'Rushing between reps'\n      ],\n      videoUrl: '/videos/single-leg-bounds.mp4',\n      thumbnailUrl: '/images/drills/single-leg-bounds.jpg'\n    },\n\n    // Catching Drills\n    {\n      id: 'ca-001',\n      name: 'Tennis Ball Reactions',\n      category: 'catching',\n      difficulty: 'Beginner',\n      duration: '10 mins',\n      equipment: 'Tennis balls',\n      space: 'Small (5x5 yards)',\n      description: 'Improve hand-eye coordination and reaction time with tennis ball drills.',\n      instructions: [\n        'Partner throws tennis ball at chest level',\n        'React and catch with both hands',\n        'Start with slow, easy throws',\n        'Gradually increase speed and vary angles',\n        'Focus on watching ball into hands',\n        '10 catches, then switch thrower'\n      ],\n      keyPoints: [\n        'Keep eyes on ball',\n        'Soft hands on catch',\n        'Quick reaction time',\n        'Proper hand position'\n      ],\n      variations: [\n        'One-Hand Catches: Alternate left and right hand',\n        'Distraction Catches: Add noise or movement',\n        'Wall Bounces: Throw against wall and catch rebound'\n      ],\n      commonMistakes: [\n        'Looking away from ball',\n        'Hard hands on contact',\n        'Poor hand positioning',\n        'Anticipating throw direction'\n      ],\n      videoUrl: '/videos/tennis-ball-reactions.mp4',\n      thumbnailUrl: '/images/drills/tennis-ball-reactions.jpg'\n    },\n\n    // Strength Training Drills\n    {\n      id: 'str-001',\n      name: 'Bodyweight Squats',\n      category: 'strength',\n      difficulty: 'Beginner',\n      duration: '8 mins',\n      equipment: 'None',\n      space: 'Small (3x3 feet)',\n      description: 'Build fundamental leg strength for explosive movements and injury prevention.',\n      instructions: [\n        'Stand with feet shoulder-width apart',\n        'Lower body by pushing hips back',\n        'Keep chest up and knees behind toes',\n        'Descend until thighs parallel to ground',\n        'Drive through heels to return to start',\n        'Perform 3 sets of 12-15 reps'\n      ],\n      keyPoints: [\n        'Proper hip hinge movement',\n        'Knee tracking over toes',\n        'Full range of motion',\n        'Controlled tempo'\n      ],\n      variations: [\n        'Jump Squats: Add explosive jump at top',\n        'Single Leg Squats: Pistol squat progression',\n        'Pulse Squats: Add pulse at bottom position'\n      ],\n      commonMistakes: [\n        'Knees caving inward',\n        'Forward torso lean',\n        'Partial range of motion',\n        'Too fast tempo'\n      ],\n      videoUrl: '/videos/bodyweight-squats.mp4',\n      thumbnailUrl: '/images/drills/bodyweight-squats.jpg'\n    },\n\n    // Recovery Drills\n    {\n      id: 'rec-001',\n      name: 'Dynamic Hip Circles',\n      category: 'recovery',\n      difficulty: 'Beginner',\n      duration: '5 mins',\n      equipment: 'None',\n      space: 'Small (3x3 feet)',\n      description: 'Improve hip mobility and reduce stiffness after training sessions.',\n      instructions: [\n        'Stand on left leg, lift right knee to 90 degrees',\n        'Rotate right leg in large circles',\n        'Perform 10 circles forward, 10 backward',\n        'Keep standing leg stable and core engaged',\n        'Switch to left leg and repeat',\n        'Focus on smooth, controlled movement'\n      ],\n      keyPoints: [\n        'Full range of motion',\n        'Stable standing leg',\n        'Smooth circular motion',\n        'Core engagement'\n      ],\n      variations: [\n        'Small Circles: Reduce circle size for tight hips',\n        'Figure 8s: Create figure-8 pattern',\n        'Supported Circles: Hold wall for balance'\n      ],\n      commonMistakes: [\n        'Rushed movement',\n        'Poor standing leg stability',\n        'Limited range of motion',\n        'Arching lower back'\n      ],\n      videoUrl: '/videos/hip-circles.mp4',\n      thumbnailUrl: '/images/drills/hip-circles.jpg'\n    }\n  ];\n\n  // Filter drills based on category, search, difficulty, and equipment\n  useEffect(() => {\n    let filtered = drillDatabase;\n\n    // Category filter\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(drill => drill.category === selectedCategory);\n    }\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(drill => \n        drill.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        drill.description.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Difficulty filter\n    if (difficultyFilter !== 'all') {\n      filtered = filtered.filter(drill => drill.difficulty === difficultyFilter);\n    }\n\n    // Equipment filter\n    if (equipmentFilter !== 'all') {\n      if (equipmentFilter === 'none') {\n        filtered = filtered.filter(drill => drill.equipment === 'None');\n      } else {\n        filtered = filtered.filter(drill => drill.equipment !== 'None');\n      }\n    }\n\n    setFilteredDrills(filtered);\n  }, [selectedCategory, searchTerm, difficultyFilter, equipmentFilter]);\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-100 text-green-800';\n      case 'Intermediate': return 'bg-yellow-100 text-yellow-800';\n      case 'Advanced': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'routes': return '🏃';\n      case 'speed': return '⚡';\n      case 'plyometrics': return '🏋️';\n      case 'catching': return '🎯';\n      case 'strength': return '💪';\n      case 'recovery': return '🧘';\n      default: return '🏈';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Search and Filters */}\n      <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n        <h2 className=\"text-xl font-bold text-white mb-4\">Drill Library</h2>\n        \n        {/* Search Bar */}\n        <div className=\"mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Search drills...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-gray-300 border border-white/30 focus:border-blue-400 focus:outline-none\"\n          />\n        </div>\n\n        {/* Filter Row */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <select\n            value={difficultyFilter}\n            onChange={(e) => setDifficultyFilter(e.target.value)}\n            className=\"p-3 rounded-lg bg-white/20 text-white border border-white/30 focus:border-blue-400 focus:outline-none\"\n          >\n            <option value=\"all\">All Difficulties</option>\n            <option value=\"Beginner\">Beginner</option>\n            <option value=\"Intermediate\">Intermediate</option>\n            <option value=\"Advanced\">Advanced</option>\n          </select>\n\n          <select\n            value={equipmentFilter}\n            onChange={(e) => setEquipmentFilter(e.target.value)}\n            className=\"p-3 rounded-lg bg-white/20 text-white border border-white/30 focus:border-blue-400 focus:outline-none\"\n          >\n            <option value=\"all\">All Equipment</option>\n            <option value=\"none\">No Equipment Needed</option>\n            <option value=\"equipment\">Equipment Required</option>\n          </select>\n        </div>\n\n        <div className=\"mt-4 text-sm text-blue-200\">\n          Found {filteredDrills.length} drill{filteredDrills.length !== 1 ? 's' : ''}\n        </div>\n      </div>\n\n      {/* Drill Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n        {filteredDrills.map((drill) => (\n          <div\n            key={drill.id}\n            className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 hover:bg-white/20 transition-all duration-300 cursor-pointer group\"\n            onClick={() => onSelectDrill && onSelectDrill(drill)}\n          >\n            {/* Header */}\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-2xl\">{getCategoryIcon(drill.category)}</span>\n                <div>\n                  <h3 className=\"text-lg font-bold text-white group-hover:text-blue-300 transition-colors\">\n                    {drill.name}\n                  </h3>\n                  <span className={`px-2 py-1 rounded-full text-xs font-semibold ${getDifficultyColor(drill.difficulty)}`}>\n                    {drill.difficulty}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Description */}\n            <p className=\"text-blue-200 text-sm mb-4 line-clamp-2\">\n              {drill.description}\n            </p>\n\n            {/* Details Grid */}\n            <div className=\"grid grid-cols-2 gap-3 mb-4 text-xs\">\n              <div className=\"bg-white/10 rounded-lg p-2\">\n                <div className=\"text-gray-400\">Duration</div>\n                <div className=\"text-white font-semibold\">{drill.duration}</div>\n              </div>\n              <div className=\"bg-white/10 rounded-lg p-2\">\n                <div className=\"text-gray-400\">Equipment</div>\n                <div className=\"text-white font-semibold\">{drill.equipment}</div>\n              </div>\n              <div className=\"bg-white/10 rounded-lg p-2 col-span-2\">\n                <div className=\"text-gray-400\">Space Required</div>\n                <div className=\"text-white font-semibold\">{drill.space}</div>\n              </div>\n            </div>\n\n            {/* Key Points Preview */}\n            <div className=\"mb-4\">\n              <div className=\"text-xs text-gray-400 mb-2\">Key Points:</div>\n              <div className=\"text-sm text-blue-200\">\n                • {drill.keyPoints[0]}\n                {drill.keyPoints.length > 1 && (\n                  <span className=\"text-gray-400\"> +{drill.keyPoints.length - 1} more</span>\n                )}\n              </div>\n            </div>\n\n            {/* Action Button */}\n            <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-semibold transition-colors group-hover:bg-blue-500\">\n              View Full Drill\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* No Results */}\n      {filteredDrills.length === 0 && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">🔍</div>\n          <h3 className=\"text-xl font-bold text-white mb-2\">No drills found</h3>\n          <p className=\"text-blue-200\">Try adjusting your search or filters</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrillLibrary;","import React, { useState, useEffect } from 'react';\n\nconst DrillDetail = ({ drill, onBack, onStartDrill }) => {\n  const [activeTab, setActiveTab] = useState('instructions');\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (timerRunning) {\n      interval = setInterval(() => {\n        setTimeElapsed(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [timerRunning]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-500';\n      case 'Intermediate': return 'bg-yellow-500';\n      case 'Advanced': return 'bg-red-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'routes': return '🏃';\n      case 'speed': return '⚡';\n      case 'plyometrics': return '🏋️';\n      case 'catching': return '🎯';\n      case 'strength': return '💪';\n      case 'recovery': return '🧘';\n      default: return '🏈';\n    }\n  };\n\n  const handleStartTimer = () => {\n    setTimerRunning(true);\n    onStartDrill && onStartDrill(drill);\n  };\n\n  const handleCompleteStep = () => {\n    if (currentStep < drill.instructions.length - 1) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      setCompleted(true);\n      setTimerRunning(false);\n    }\n  };\n\n  const resetDrill = () => {\n    setTimerRunning(false);\n    setTimeElapsed(0);\n    setCurrentStep(0);\n    setCompleted(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Library</span>\n          </button>\n          \n          {/* Timer Display */}\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-400\">\n              {formatTime(timeElapsed)}\n            </div>\n            <div className=\"text-sm text-blue-200\">Training Time</div>\n          </div>\n        </div>\n\n        {/* Drill Header */}\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 mb-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-4xl\">{getCategoryIcon(drill.category)}</div>\n              <div>\n                <h1 className=\"text-3xl font-bold mb-2\">{drill.name}</h1>\n                <p className=\"text-blue-200 text-lg\">{drill.description}</p>\n              </div>\n            </div>\n            <span className={`px-3 py-1 rounded-full text-white font-semibold ${getDifficultyColor(drill.difficulty)}`}>\n              {drill.difficulty}\n            </span>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-blue-400\">{drill.duration}</div>\n              <div className=\"text-sm text-gray-300\">Duration</div>\n            </div>\n            <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-green-400\">{drill.equipment}</div>\n              <div className=\"text-sm text-gray-300\">Equipment</div>\n            </div>\n            <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-yellow-400\">{drill.space}</div>\n              <div className=\"text-sm text-gray-300\">Space</div>\n            </div>\n            <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-purple-400\">{drill.instructions.length}</div>\n              <div className=\"text-sm text-gray-300\">Steps</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Content Tabs */}\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl overflow-hidden\">\n          {/* Tab Navigation */}\n          <div className=\"flex border-b border-white/20\">\n            {[\n              { id: 'instructions', label: 'Instructions', icon: '📋' },\n              { id: 'keypoints', label: 'Key Points', icon: '🎯' },\n              { id: 'variations', label: 'Variations', icon: '🔄' },\n              { id: 'mistakes', label: 'Common Mistakes', icon: '⚠️' }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex-1 flex items-center justify-center space-x-2 py-4 px-6 transition-colors ${\n                  activeTab === tab.id\n                    ? 'bg-blue-600 text-white'\n                    : 'text-gray-300 hover:text-white hover:bg-white/10'\n                }`}\n              >\n                <span>{tab.icon}</span>\n                <span className=\"hidden md:inline\">{tab.label}</span>\n              </button>\n            ))}\n          </div>\n\n          {/* Tab Content */}\n          <div className=\"p-6\">\n            {activeTab === 'instructions' && (\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-xl font-bold\">Step-by-Step Instructions</h3>\n                  {!completed && (\n                    <div className=\"text-sm text-blue-200\">\n                      Step {currentStep + 1} of {drill.instructions.length}\n                    </div>\n                  )}\n                </div>\n\n                {drill.instructions.map((instruction, index) => (\n                  <div\n                    key={index}\n                    className={`p-4 rounded-lg border-l-4 transition-all ${\n                      index === currentStep && timerRunning\n                        ? 'bg-blue-600/20 border-blue-400 scale-105'\n                        : index < currentStep || completed\n                        ? 'bg-green-600/20 border-green-400'\n                        : 'bg-white/10 border-gray-600'\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                        index < currentStep || completed\n                          ? 'bg-green-500 text-white'\n                          : index === currentStep && timerRunning\n                          ? 'bg-blue-500 text-white'\n                          : 'bg-gray-600 text-gray-300'\n                      }`}>\n                        {index < currentStep || completed ? '✓' : index + 1}\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"text-white\">{instruction}</p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n\n                {/* Control Buttons */}\n                <div className=\"flex space-x-4 mt-6\">\n                  {!timerRunning && !completed && (\n                    <button\n                      onClick={handleStartTimer}\n                      className=\"flex-1 bg-green-600 hover:bg-green-700 py-3 rounded-lg font-semibold transition-colors\"\n                    >\n                      Start Drill\n                    </button>\n                  )}\n                  \n                  {timerRunning && !completed && (\n                    <button\n                      onClick={handleCompleteStep}\n                      className=\"flex-1 bg-blue-600 hover:bg-blue-700 py-3 rounded-lg font-semibold transition-colors\"\n                    >\n                      Complete Step {currentStep + 1}\n                    </button>\n                  )}\n                  \n                  {completed && (\n                    <div className=\"flex space-x-4 w-full\">\n                      <button\n                        onClick={resetDrill}\n                        className=\"flex-1 bg-purple-600 hover:bg-purple-700 py-3 rounded-lg font-semibold transition-colors\"\n                      >\n                        Repeat Drill\n                      </button>\n                      <button\n                        onClick={onBack}\n                        className=\"flex-1 bg-green-600 hover:bg-green-700 py-3 rounded-lg font-semibold transition-colors\"\n                      >\n                        Complete ✓\n                      </button>\n                    </div>\n                  )}\n                </div>\n\n                {completed && (\n                  <div className=\"bg-green-600/20 border border-green-400 rounded-lg p-4 mt-4\">\n                    <div className=\"flex items-center space-x-2 text-green-300\">\n                      <span className=\"text-xl\">🎉</span>\n                      <span className=\"font-semibold\">Drill Completed!</span>\n                    </div>\n                    <p className=\"text-green-200 mt-2\">\n                      Total time: {formatTime(timeElapsed)} • Great work on mastering {drill.name}!\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {activeTab === 'keypoints' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-xl font-bold mb-4\">Key Focus Points</h3>\n                {drill.keyPoints.map((point, index) => (\n                  <div key={index} className=\"flex items-start space-x-3 p-3 bg-white/10 rounded-lg\">\n                    <span className=\"text-yellow-400 text-xl\">•</span>\n                    <p className=\"text-white\">{point}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {activeTab === 'variations' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-xl font-bold mb-4\">Drill Variations</h3>\n                {drill.variations.map((variation, index) => (\n                  <div key={index} className=\"p-4 bg-white/10 rounded-lg\">\n                    <p className=\"text-white\">{variation}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {activeTab === 'mistakes' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-xl font-bold mb-4\">Common Mistakes to Avoid</h3>\n                {drill.commonMistakes.map((mistake, index) => (\n                  <div key={index} className=\"flex items-start space-x-3 p-3 bg-red-600/20 border border-red-400 rounded-lg\">\n                    <span className=\"text-red-400 text-xl\">⚠️</span>\n                    <p className=\"text-red-200\">{mistake}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DrillDetail;","import React, { useState, useEffect } from 'react';\n\nconst TrainingCalendar = ({ onScheduleWorkout, scheduledWorkouts = [] }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\n  const [calendarView, setCalendarView] = useState('month'); // 'month' or 'week'\n\n  // Get calendar data\n  const today = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n\n  // Generate calendar days\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startDayOfWeek = firstDay.getDay();\n\n    const days = [];\n    \n    // Add empty cells for days before month starts\n    for (let i = 0; i < startDayOfWeek; i++) {\n      days.push(null);\n    }\n    \n    // Add days of current month\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(new Date(year, month, day));\n    }\n    \n    return days;\n  };\n\n  // Check if date has scheduled workout\n  const getWorkoutsForDate = (date) => {\n    if (!date) return [];\n    const dateStr = date.toDateString();\n    return scheduledWorkouts.filter(workout => \n      new Date(workout.date).toDateString() === dateStr\n    );\n  };\n\n  // Get week view data\n  const getWeekDays = (date) => {\n    const startOfWeek = new Date(date);\n    const day = startOfWeek.getDay();\n    const diff = startOfWeek.getDate() - day;\n    startOfWeek.setDate(diff);\n\n    const weekDays = [];\n    for (let i = 0; i < 7; i++) {\n      const day = new Date(startOfWeek);\n      day.setDate(startOfWeek.getDate() + i);\n      weekDays.push(day);\n    }\n    return weekDays;\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', { \n      weekday: 'long', \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  };\n\n  const isToday = (date) => {\n    return date && date.toDateString() === today.toDateString();\n  };\n\n  const isPastDate = (date) => {\n    return date && date < today && !isToday(date);\n  };\n\n  const navigateCalendar = (direction) => {\n    const newDate = new Date(currentDate);\n    if (calendarView === 'month') {\n      newDate.setMonth(currentDate.getMonth() + direction);\n    } else {\n      newDate.setDate(currentDate.getDate() + (direction * 7));\n    }\n    setCurrentDate(newDate);\n  };\n\n  const handleDateClick = (date) => {\n    if (!date || isPastDate(date)) return;\n    setSelectedDate(date);\n    setShowScheduleModal(true);\n  };\n\n  const workoutTypes = [\n    { id: 'routes', name: 'Route Running', icon: '🏃', color: 'bg-blue-500' },\n    { id: 'speed', name: 'Speed Training', icon: '⚡', color: 'bg-yellow-500' },\n    { id: 'plyometrics', name: 'Plyometrics', icon: '🏋️', color: 'bg-purple-500' },\n    { id: 'catching', name: 'Catching', icon: '🎯', color: 'bg-green-500' },\n    { id: 'strength', name: 'Strength', icon: '💪', color: 'bg-red-500' },\n    { id: 'recovery', name: 'Recovery', icon: '🧘', color: 'bg-teal-500' },\n    { id: 'rest', name: 'Rest Day', icon: '😴', color: 'bg-gray-500' }\n  ];\n\n  const renderMonthView = () => {\n    const days = getDaysInMonth(currentDate);\n    const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    return (\n      <div className=\"grid grid-cols-7 gap-1\">\n        {/* Day headers */}\n        {dayNames.map(day => (\n          <div key={day} className=\"p-3 text-center text-sm font-semibold text-gray-400\">\n            {day}\n          </div>\n        ))}\n        \n        {/* Calendar days */}\n        {days.map((date, index) => {\n          const workouts = getWorkoutsForDate(date);\n          const isClickable = date && !isPastDate(date);\n          \n          return (\n            <div\n              key={index}\n              onClick={() => isClickable && handleDateClick(date)}\n              className={`min-h-[80px] p-2 border border-white/20 transition-all ${\n                !date \n                  ? 'bg-transparent' \n                  : isPastDate(date)\n                  ? 'bg-gray-800/50 text-gray-500'\n                  : isToday(date)\n                  ? 'bg-blue-600/30 border-blue-400'\n                  : isClickable\n                  ? 'bg-white/10 hover:bg-white/20 cursor-pointer'\n                  : 'bg-white/5'\n              }`}\n            >\n              {date && (\n                <>\n                  <div className={`text-sm font-semibold ${\n                    isToday(date) ? 'text-blue-300' : 'text-white'\n                  }`}>\n                    {date.getDate()}\n                  </div>\n                  \n                  {/* Workout indicators */}\n                  <div className=\"space-y-1 mt-1\">\n                    {workouts.slice(0, 2).map((workout, idx) => {\n                      const type = workoutTypes.find(t => t.id === workout.type);\n                      return (\n                        <div\n                          key={idx}\n                          className={`text-xs px-1 py-0.5 rounded text-white truncate ${type?.color || 'bg-gray-500'}`}\n                        >\n                          {type?.icon} {workout.name || type?.name}\n                        </div>\n                      );\n                    })}\n                    {workouts.length > 2 && (\n                      <div className=\"text-xs text-gray-400\">\n                        +{workouts.length - 2} more\n                      </div>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderWeekView = () => {\n    const weekDays = getWeekDays(currentDate);\n    \n    return (\n      <div className=\"grid grid-cols-7 gap-4\">\n        {weekDays.map((date, index) => {\n          const workouts = getWorkoutsForDate(date);\n          const isClickable = !isPastDate(date);\n          \n          return (\n            <div\n              key={index}\n              onClick={() => isClickable && handleDateClick(date)}\n              className={`p-4 rounded-lg min-h-[200px] transition-all ${\n                isPastDate(date)\n                  ? 'bg-gray-800/50 text-gray-500'\n                  : isToday(date)\n                  ? 'bg-blue-600/30 border border-blue-400'\n                  : isClickable\n                  ? 'bg-white/10 hover:bg-white/20 cursor-pointer'\n                  : 'bg-white/5'\n              }`}\n            >\n              <div className=\"text-center mb-3\">\n                <div className=\"text-sm text-gray-400\">\n                  {date.toLocaleDateString('en-US', { weekday: 'short' })}\n                </div>\n                <div className={`text-xl font-bold ${\n                  isToday(date) ? 'text-blue-300' : 'text-white'\n                }`}>\n                  {date.getDate()}\n                </div>\n              </div>\n              \n              {/* Workouts */}\n              <div className=\"space-y-2\">\n                {workouts.map((workout, idx) => {\n                  const type = workoutTypes.find(t => t.id === workout.type);\n                  return (\n                    <div\n                      key={idx}\n                      className={`p-2 rounded text-xs text-white ${type?.color || 'bg-gray-500'}`}\n                    >\n                      <div className=\"flex items-center space-x-1\">\n                        <span>{type?.icon}</span>\n                        <span className=\"font-semibold\">{workout.name || type?.name}</span>\n                      </div>\n                      {workout.time && (\n                        <div className=\"text-white/80 mt-1\">{workout.time}</div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-white\">Training Calendar</h2>\n          <p className=\"text-blue-200\">Plan your training schedule</p>\n        </div>\n        \n        {/* View Toggle */}\n        <div className=\"flex bg-white/20 rounded-lg p-1\">\n          <button\n            onClick={() => setCalendarView('month')}\n            className={`px-4 py-2 rounded-md transition-colors ${\n              calendarView === 'month' \n                ? 'bg-blue-600 text-white' \n                : 'text-gray-300 hover:text-white'\n            }`}\n          >\n            Month\n          </button>\n          <button\n            onClick={() => setCalendarView('week')}\n            className={`px-4 py-2 rounded-md transition-colors ${\n              calendarView === 'week' \n                ? 'bg-blue-600 text-white' \n                : 'text-gray-300 hover:text-white'\n            }`}\n          >\n            Week\n          </button>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <button\n          onClick={() => navigateCalendar(-1)}\n          className=\"p-2 text-gray-300 hover:text-white transition-colors\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n        \n        <h3 className=\"text-xl font-semibold text-white\">\n          {currentDate.toLocaleDateString('en-US', { \n            month: 'long', \n            year: 'numeric' \n          })}\n        </h3>\n        \n        <button\n          onClick={() => navigateCalendar(1)}\n          className=\"p-2 text-gray-300 hover:text-white transition-colors\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Calendar */}\n      {calendarView === 'month' ? renderMonthView() : renderWeekView()}\n\n      {/* Legend */}\n      <div className=\"mt-6 pt-4 border-t border-white/20\">\n        <div className=\"flex flex-wrap gap-3\">\n          {workoutTypes.map(type => (\n            <div key={type.id} className=\"flex items-center space-x-2\">\n              <div className={`w-3 h-3 rounded ${type.color}`}></div>\n              <span className=\"text-sm text-gray-300\">{type.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Schedule Modal */}\n      {showScheduleModal && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-gradient-to-br from-gray-900 to-blue-900 rounded-2xl max-w-md w-full p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-xl font-bold text-white\">Schedule Workout</h3>\n              <button\n                onClick={() => setShowScheduleModal(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <p className=\"text-blue-200 mb-6\">{formatDate(selectedDate)}</p>\n            \n            <div className=\"grid grid-cols-2 gap-3\">\n              {workoutTypes.slice(0, -1).map(type => (\n                <button\n                  key={type.id}\n                  onClick={() => {\n                    onScheduleWorkout && onScheduleWorkout({\n                      date: selectedDate,\n                      type: type.id,\n                      name: type.name\n                    });\n                    setShowScheduleModal(false);\n                  }}\n                  className={`p-4 rounded-lg text-white font-semibold transition-all hover:scale-105 ${type.color}`}\n                >\n                  <div className=\"text-2xl mb-2\">{type.icon}</div>\n                  <div className=\"text-sm\">{type.name}</div>\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TrainingCalendar;","import React, { useState, useRef, useEffect } from 'react';\n\nconst ProgressTracker = ({ onBack }) => {\n  const [photos, setPhotos] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('form');\n  const [showCamera, setShowCamera] = useState(false);\n  const [capturedPhoto, setCapturedPhoto] = useState(null);\n  const [comparison, setComparison] = useState({ before: null, after: null });\n  const [showComparison, setShowComparison] = useState(false);\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const photoCategories = [\n    { id: 'form', name: 'Form Check', icon: '🏃', description: 'Running and movement form' },\n    { id: 'physique', name: 'Physique', icon: '💪', description: 'Body composition progress' },\n    { id: 'flexibility', name: 'Flexibility', icon: '🧘', description: 'Range of motion and mobility' },\n    { id: 'achievements', name: 'Achievements', icon: '🏆', description: 'Celebration and milestone photos' }\n  ];\n\n  // Sample progress data\n  const samplePhotos = [\n    {\n      id: 1,\n      category: 'form',\n      date: new Date('2024-06-01'),\n      title: 'Sprint Form - Week 1',\n      notes: 'Initial form check - notice knee drive needs improvement',\n      url: '/images/progress/form-week1.jpg'\n    },\n    {\n      id: 2,\n      category: 'form',\n      date: new Date('2024-07-01'),\n      title: 'Sprint Form - Week 5',\n      notes: 'Much better knee drive and arm positioning!',\n      url: '/images/progress/form-week5.jpg'\n    },\n    {\n      id: 3,\n      category: 'physique',\n      date: new Date('2024-06-01'),\n      title: 'Starting Point',\n      notes: 'Beginning of training program',\n      url: '/images/progress/physique-start.jpg'\n    },\n    {\n      id: 4,\n      category: 'achievements',\n      date: new Date('2024-07-15'),\n      title: 'First 40-yard dash under 5 seconds!',\n      notes: 'Finally broke the 5-second barrier - 4.97s!',\n      url: '/images/progress/achievement-40yard.jpg'\n    }\n  ];\n\n  useEffect(() => {\n    setPhotos(samplePhotos);\n  }, []);\n\n  // Camera functionality\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { facingMode: 'environment' } \n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      }\n      setShowCamera(true);\n    } catch (error) {\n      console.error('Camera access denied:', error);\n      // Fallback to file input\n      fileInputRef.current?.click();\n    }\n  };\n\n  const capturePhoto = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0);\n\n    const photoData = canvas.toDataURL('image/jpeg');\n    setCapturedPhoto(photoData);\n    stopCamera();\n  };\n\n  const stopCamera = () => {\n    const video = videoRef.current;\n    if (video && video.srcObject) {\n      const stream = video.srcObject;\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n      video.srcObject = null;\n    }\n    setShowCamera(false);\n  };\n\n  const savePhoto = (photoData, title, notes) => {\n    const newPhoto = {\n      id: Date.now(),\n      category: selectedCategory,\n      date: new Date(),\n      title: title || `${photoCategories.find(c => c.id === selectedCategory)?.name} - ${new Date().toLocaleDateString()}`,\n      notes: notes || '',\n      url: photoData\n    };\n    \n    setPhotos(prev => [newPhoto, ...prev]);\n    setCapturedPhoto(null);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setCapturedPhoto(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const filteredPhotos = photos.filter(photo => photo.category === selectedCategory);\n\n  const getPhotosByDate = () => {\n    return filteredPhotos.sort((a, b) => new Date(b.date) - new Date(a.date));\n  };\n\n  const setUpComparison = (photo) => {\n    if (!comparison.before) {\n      setComparison({ before: photo, after: null });\n    } else if (!comparison.after && photo.id !== comparison.before.id) {\n      setComparison(prev => ({ ...prev, after: photo }));\n      setShowComparison(true);\n    } else {\n      setComparison({ before: photo, after: null });\n    }\n  };\n\n  const formatDate = (date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Training</span>\n          </button>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={startCamera}\n              className=\"flex items-center space-x-2 bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              <span>Take Photo</span>\n            </button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleFileUpload}\n              className=\"hidden\"\n            />\n            <button\n              onClick={() => fileInputRef.current?.click()}\n              className=\"flex items-center space-x-2 bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\n              </svg>\n              <span>Upload</span>\n            </button>\n          </div>\n        </div>\n\n        <h1 className=\"text-3xl font-bold mb-2\">Progress Tracker</h1>\n        <p className=\"text-blue-200 mb-6\">Document your training journey with photos and track your improvements</p>\n\n        {/* Category Tabs */}\n        <div className=\"flex space-x-2 mb-6 bg-white/10 rounded-lg p-1\">\n          {photoCategories.map(category => (\n            <button\n              key={category.id}\n              onClick={() => setSelectedCategory(category.id)}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg transition-colors ${\n                selectedCategory === category.id\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-300 hover:text-white hover:bg-white/10'\n              }`}\n            >\n              <span className=\"text-lg\">{category.icon}</span>\n              <span className=\"font-semibold\">{category.name}</span>\n            </button>\n          ))}\n        </div>\n\n        {/* Camera Modal */}\n        {showCamera && (\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n            <div className=\"bg-gray-900 rounded-2xl p-6 max-w-lg w-full\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-xl font-bold\">Take Progress Photo</h3>\n                <button\n                  onClick={stopCamera}\n                  className=\"text-gray-400 hover:text-white\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              <video\n                ref={videoRef}\n                className=\"w-full rounded-lg mb-4\"\n                autoPlay\n                playsInline\n              />\n              <button\n                onClick={capturePhoto}\n                className=\"w-full bg-green-600 hover:bg-green-700 py-3 rounded-lg font-semibold transition-colors\"\n              >\n                Capture Photo\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Photo Capture Modal */}\n        {capturedPhoto && (\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n            <div className=\"bg-gray-900 rounded-2xl p-6 max-w-lg w-full\">\n              <h3 className=\"text-xl font-bold mb-4\">Save Progress Photo</h3>\n              <img\n                src={capturedPhoto}\n                alt=\"Captured\"\n                className=\"w-full rounded-lg mb-4\"\n              />\n              <div className=\"space-y-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Photo title...\"\n                  className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-gray-300 border border-white/30\"\n                  id=\"photoTitle\"\n                />\n                <textarea\n                  placeholder=\"Notes (optional)...\"\n                  className=\"w-full p-3 rounded-lg bg-white/20 text-white placeholder-gray-300 border border-white/30 resize-none\"\n                  rows=\"3\"\n                  id=\"photoNotes\"\n                />\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={() => {\n                      const title = document.getElementById('photoTitle').value;\n                      const notes = document.getElementById('photoNotes').value;\n                      savePhoto(capturedPhoto, title, notes);\n                    }}\n                    className=\"flex-1 bg-green-600 hover:bg-green-700 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    Save Photo\n                  </button>\n                  <button\n                    onClick={() => setCapturedPhoto(null)}\n                    className=\"flex-1 bg-gray-600 hover:bg-gray-700 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    Retake\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Comparison Modal */}\n        {showComparison && comparison.before && comparison.after && (\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n            <div className=\"bg-gray-900 rounded-2xl p-6 max-w-4xl w-full\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-2xl font-bold\">Progress Comparison</h3>\n                <button\n                  onClick={() => setShowComparison(false)}\n                  className=\"text-gray-400 hover:text-white\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-6\">\n                <div>\n                  <h4 className=\"text-lg font-semibold mb-2 text-blue-300\">Before</h4>\n                  <div className=\"bg-gray-800 rounded-lg p-4\">\n                    <div className=\"w-full h-64 bg-gray-700 rounded-lg mb-3 flex items-center justify-center\">\n                      <span className=\"text-gray-400\">Photo: {comparison.before.title}</span>\n                    </div>\n                    <p className=\"text-sm text-gray-300\">{formatDate(comparison.before.date)}</p>\n                    <p className=\"text-sm text-gray-400 mt-1\">{comparison.before.notes}</p>\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"text-lg font-semibold mb-2 text-green-300\">After</h4>\n                  <div className=\"bg-gray-800 rounded-lg p-4\">\n                    <div className=\"w-full h-64 bg-gray-700 rounded-lg mb-3 flex items-center justify-center\">\n                      <span className=\"text-gray-400\">Photo: {comparison.after.title}</span>\n                    </div>\n                    <p className=\"text-sm text-gray-300\">{formatDate(comparison.after.date)}</p>\n                    <p className=\"text-sm text-gray-400 mt-1\">{comparison.after.notes}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-6 text-center\">\n                <div className=\"bg-green-600/20 border border-green-400 rounded-lg p-4\">\n                  <p className=\"text-green-300 font-semibold\">\n                    Progress Duration: {Math.round((new Date(comparison.after.date) - new Date(comparison.before.date)) / (1000 * 60 * 60 * 24))} days\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Photo Grid */}\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-xl font-bold\">\n              {photoCategories.find(c => c.id === selectedCategory)?.name} Progress\n            </h2>\n            {comparison.before && !comparison.after && (\n              <div className=\"bg-blue-600/20 border border-blue-400 rounded-lg px-4 py-2\">\n                <span className=\"text-blue-300 text-sm\">Select a second photo to compare</span>\n              </div>\n            )}\n          </div>\n\n          {filteredPhotos.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"text-6xl mb-4\">📸</div>\n              <h3 className=\"text-xl font-bold mb-2\">No photos yet</h3>\n              <p className=\"text-blue-200 mb-4\">Start documenting your progress by taking your first photo!</p>\n              <button\n                onClick={startCamera}\n                className=\"bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-semibold transition-colors\"\n              >\n                Take First Photo\n              </button>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {getPhotosByDate().map(photo => (\n                <div\n                  key={photo.id}\n                  onClick={() => setUpComparison(photo)}\n                  className={`bg-white/10 rounded-lg overflow-hidden cursor-pointer transition-all hover:scale-105 ${\n                    comparison.before?.id === photo.id ? 'ring-2 ring-blue-400' : ''\n                  } ${\n                    comparison.after?.id === photo.id ? 'ring-2 ring-green-400' : ''\n                  }`}\n                >\n                  <div className=\"w-full h-48 bg-gray-700 flex items-center justify-center\">\n                    <span className=\"text-gray-400\">📷 {photo.title}</span>\n                  </div>\n                  <div className=\"p-4\">\n                    <h3 className=\"font-semibold mb-1\">{photo.title}</h3>\n                    <p className=\"text-sm text-blue-200 mb-2\">{formatDate(photo.date)}</p>\n                    {photo.notes && (\n                      <p className=\"text-sm text-gray-300\">{photo.notes}</p>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Hidden canvas for photo capture */}\n        <canvas ref={canvasRef} className=\"hidden\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressTracker;","import React, { useState, useEffect } from 'react';\n\nconst WeeklyChallenges = ({ onBack }) => {\n  const [activeChallenge, setActiveChallenge] = useState(null);\n  const [userProgress, setUserProgress] = useState({});\n  const [showJoinModal, setShowJoinModal] = useState(false);\n  const [selectedChallenge, setSelectedChallenge] = useState(null);\n\n  // Sample weekly challenges data\n  const weeklyChallenges = [\n    {\n      id: 'speed-week',\n      title: 'Speed Demon Week',\n      description: 'Focus on explosive speed and acceleration drills',\n      duration: '7 days',\n      difficulty: 'Intermediate',\n      participants: 234,\n      xpReward: 500,\n      badge: '⚡ Speed Demon Master',\n      startDate: new Date('2024-07-15'),\n      endDate: new Date('2024-07-22'),\n      status: 'active',\n      requirements: [\n        'Complete 5 sprint drills with perfect form',\n        'Achieve sub-5 second 40-yard dash',\n        'Complete 3 acceleration ladder sessions',\n        'Maintain 90%+ attendance rate'\n      ],\n      dailyTasks: [\n        { day: 1, task: 'Sprint Mechanics Analysis', completed: true, xp: 50 },\n        { day: 2, task: '40-yard dash baseline', completed: true, xp: 75 },\n        { day: 3, task: 'Acceleration ladder drills', completed: false, xp: 60 },\n        { day: 4, task: 'Rest day - form review', completed: false, xp: 30 },\n        { day: 5, task: 'Speed endurance training', completed: false, xp: 80 },\n        { day: 6, task: 'Competition simulation', completed: false, xp: 90 },\n        { day: 7, task: 'Final assessment', completed: false, xp: 100 }\n      ]\n    },\n    {\n      id: 'route-mastery',\n      title: 'Route Running Mastery',\n      description: 'Perfect your route running technique and precision',\n      duration: '7 days',\n      difficulty: 'Advanced',\n      participants: 187,\n      xpReward: 600,\n      badge: '🎯 Route Master Elite',\n      startDate: new Date('2024-07-22'),\n      endDate: new Date('2024-07-29'),\n      status: 'upcoming',\n      requirements: [\n        'Master 8 different route types',\n        'Achieve 95%+ route precision',\n        'Complete video form analysis',\n        'Participate in peer feedback session'\n      ],\n      dailyTasks: [\n        { day: 1, task: 'Slant and comeback routes', completed: false, xp: 60 },\n        { day: 2, task: 'Out and curl patterns', completed: false, xp: 65 },\n        { day: 3, task: 'Double move combinations', completed: false, xp: 80 },\n        { day: 4, task: 'Video analysis session', completed: false, xp: 40 },\n        { day: 5, task: 'Post and fade routes', completed: false, xp: 70 },\n        { day: 6, task: 'Precision timing drills', completed: false, xp: 85 },\n        { day: 7, task: 'Route mastery assessment', completed: false, xp: 100 }\n      ]\n    },\n    {\n      id: 'strength-foundation',\n      title: 'Strength Foundation Builder',\n      description: 'Build functional strength for explosive flag football performance',\n      duration: '7 days',\n      difficulty: 'Beginner',\n      participants: 312,\n      xpReward: 400,\n      badge: '💪 Foundation Master',\n      startDate: new Date('2024-07-29'),\n      endDate: new Date('2024-08-05'),\n      status: 'upcoming',\n      requirements: [\n        'Complete all bodyweight progressions',\n        'Maintain proper form throughout',\n        'Log daily recovery metrics',\n        'Complete mobility assessments'\n      ],\n      dailyTasks: [\n        { day: 1, task: 'Bodyweight assessment', completed: false, xp: 40 },\n        { day: 2, task: 'Push-up progressions', completed: false, xp: 55 },\n        { day: 3, task: 'Squat variations', completed: false, xp: 60 },\n        { day: 4, task: 'Core stability training', completed: false, xp: 50 },\n        { day: 5, task: 'Plyometric introduction', completed: false, xp: 70 },\n        { day: 6, task: 'Full-body integration', completed: false, xp: 75 },\n        { day: 7, task: 'Progress assessment', completed: false, xp: 90 }\n      ]\n    }\n  ];\n\n  const completedChallenges = [\n    {\n      id: 'agility-master',\n      title: 'Agility Master Challenge',\n      completed: true,\n      completedDate: new Date('2024-07-08'),\n      finalScore: 487,\n      maxScore: 500,\n      rank: 12,\n      badge: '🏃 Agility Master'\n    },\n    {\n      id: 'catching-clinic',\n      title: 'Catching Clinic Week',\n      completed: true,\n      completedDate: new Date('2024-07-01'),\n      finalScore: 520,\n      maxScore: 550,\n      rank: 8,\n      badge: '🙌 Catch King'\n    }\n  ];\n\n  useEffect(() => {\n    // Set active challenge (most recent active)\n    const active = weeklyChallenges.find(c => c.status === 'active');\n    setActiveChallenge(active);\n\n    // Initialize user progress\n    const initialProgress = {};\n    weeklyChallenges.forEach(challenge => {\n      initialProgress[challenge.id] = {\n        enrolled: challenge.status === 'active',\n        completedTasks: challenge.dailyTasks.filter(t => t.completed).length,\n        totalXP: challenge.dailyTasks.filter(t => t.completed).reduce((sum, t) => sum + t.xp, 0)\n      };\n    });\n    setUserProgress(initialProgress);\n  }, []);\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-500';\n      case 'Intermediate': return 'bg-yellow-500';\n      case 'Advanced': return 'bg-red-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'bg-green-500';\n      case 'upcoming': return 'bg-blue-500';\n      case 'completed': return 'bg-purple-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getProgressPercentage = (challenge) => {\n    const progress = userProgress[challenge.id];\n    if (!progress) return 0;\n    return (progress.completedTasks / challenge.dailyTasks.length) * 100;\n  };\n\n  const handleJoinChallenge = (challenge) => {\n    setSelectedChallenge(challenge);\n    setShowJoinModal(true);\n  };\n\n  const confirmJoinChallenge = () => {\n    if (selectedChallenge) {\n      setUserProgress(prev => ({\n        ...prev,\n        [selectedChallenge.id]: {\n          enrolled: true,\n          completedTasks: 0,\n          totalXP: 0\n        }\n      }));\n      setShowJoinModal(false);\n      setSelectedChallenge(null);\n    }\n  };\n\n  const completeTask = (challengeId, taskIndex) => {\n    setUserProgress(prev => {\n      const challenge = weeklyChallenges.find(c => c.id === challengeId);\n      const task = challenge.dailyTasks[taskIndex];\n      const currentProgress = prev[challengeId] || { enrolled: true, completedTasks: 0, totalXP: 0 };\n      \n      return {\n        ...prev,\n        [challengeId]: {\n          ...currentProgress,\n          completedTasks: currentProgress.completedTasks + 1,\n          totalXP: currentProgress.totalXP + task.xp\n        }\n      };\n    });\n\n    // Mark task as completed in the challenge data\n    const challenge = weeklyChallenges.find(c => c.id === challengeId);\n    challenge.dailyTasks[taskIndex].completed = true;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Training</span>\n          </button>\n        </div>\n\n        <h1 className=\"text-3xl font-bold mb-2\">Weekly Challenges</h1>\n        <p className=\"text-blue-200 mb-8\">Join structured challenges to accelerate your progress and compete with the community</p>\n\n        {/* Active Challenge Spotlight */}\n        {activeChallenge && userProgress[activeChallenge.id]?.enrolled && (\n          <div className=\"bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl p-6 mb-8 relative overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-r from-white/10 to-transparent\"></div>\n            <div className=\"relative\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-3xl\">🔥</span>\n                  <div>\n                    <h2 className=\"text-2xl font-bold\">Active Challenge</h2>\n                    <p className=\"text-green-100\">You're currently participating</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-3xl font-bold\">{userProgress[activeChallenge.id].totalXP}</div>\n                  <div className=\"text-green-100\">XP Earned</div>\n                </div>\n              </div>\n              \n              <h3 className=\"text-xl font-bold mb-2\">{activeChallenge.title}</h3>\n              <p className=\"text-green-100 mb-4\">{activeChallenge.description}</p>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-6\">\n                  <div>\n                    <span className=\"text-green-200 text-sm\">Progress</span>\n                    <div className=\"text-lg font-bold\">\n                      {userProgress[activeChallenge.id].completedTasks}/{activeChallenge.dailyTasks.length} tasks\n                    </div>\n                  </div>\n                  <div>\n                    <span className=\"text-green-200 text-sm\">Ends</span>\n                    <div className=\"text-lg font-bold\">{formatDate(activeChallenge.endDate)}</div>\n                  </div>\n                </div>\n                <div className=\"w-32\">\n                  <div className=\"w-full bg-white/20 rounded-full h-3\">\n                    <div \n                      className=\"bg-white h-3 rounded-full transition-all duration-1000\"\n                      style={{ width: `${getProgressPercentage(activeChallenge)}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"text-sm text-green-200 mt-1\">\n                    {Math.round(getProgressPercentage(activeChallenge))}% complete\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Available Challenges */}\n          <div className=\"lg:col-span-2\">\n            <h2 className=\"text-2xl font-bold mb-6\">Available Challenges</h2>\n            <div className=\"space-y-6\">\n              {weeklyChallenges.map(challenge => {\n                const progress = userProgress[challenge.id];\n                const isEnrolled = progress?.enrolled;\n                \n                return (\n                  <div\n                    key={challenge.id}\n                    className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 transition-all hover:bg-white/20\"\n                  >\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-3 mb-2\">\n                          <h3 className=\"text-xl font-bold\">{challenge.title}</h3>\n                          <span className={`px-2 py-1 rounded-full text-xs font-semibold ${getStatusColor(challenge.status)}`}>\n                            {challenge.status}\n                          </span>\n                          <span className={`px-2 py-1 rounded-full text-xs font-semibold ${getDifficultyColor(challenge.difficulty)}`}>\n                            {challenge.difficulty}\n                          </span>\n                        </div>\n                        <p className=\"text-gray-300 mb-3\">{challenge.description}</p>\n                        \n                        <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                          <div>\n                            <span className=\"text-gray-400\">Duration:</span>\n                            <div className=\"font-semibold\">{challenge.duration}</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-400\">Participants:</span>\n                            <div className=\"font-semibold\">{challenge.participants}</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-400\">XP Reward:</span>\n                            <div className=\"font-semibold text-yellow-400\">{challenge.xpReward}</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Progress bar for enrolled challenges */}\n                    {isEnrolled && (\n                      <div className=\"mb-4\">\n                        <div className=\"flex justify-between text-sm mb-2\">\n                          <span>Progress</span>\n                          <span>{progress.completedTasks}/{challenge.dailyTasks.length} tasks</span>\n                        </div>\n                        <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-1000\"\n                            style={{ width: `${getProgressPercentage(challenge)}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Requirements */}\n                    <div className=\"mb-4\">\n                      <h4 className=\"font-semibold mb-2\">Requirements:</h4>\n                      <ul className=\"space-y-1\">\n                        {challenge.requirements.map((req, index) => (\n                          <li key={index} className=\"text-sm text-gray-300 flex items-center space-x-2\">\n                            <span className=\"text-blue-400\">•</span>\n                            <span>{req}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    {/* Action buttons */}\n                    <div className=\"flex space-x-3\">\n                      {!isEnrolled && challenge.status !== 'completed' && (\n                        <button\n                          onClick={() => handleJoinChallenge(challenge)}\n                          className=\"flex-1 bg-blue-600 hover:bg-blue-700 py-2 rounded-lg font-semibold transition-colors\"\n                        >\n                          Join Challenge\n                        </button>\n                      )}\n                      {isEnrolled && (\n                        <button\n                          onClick={() => setActiveChallenge(challenge)}\n                          className=\"flex-1 bg-green-600 hover:bg-green-700 py-2 rounded-lg font-semibold transition-colors\"\n                        >\n                          View Daily Tasks\n                        </button>\n                      )}\n                      <button className=\"px-4 py-2 bg-white/20 hover:bg-white/30 rounded-lg font-semibold transition-colors\">\n                        Details\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Challenge Stats */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-lg font-bold mb-4\">Your Challenge Stats</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Challenges Completed</span>\n                  <span className=\"font-bold text-green-400\">{completedChallenges.length}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Active Challenges</span>\n                  <span className=\"font-bold text-blue-400\">\n                    {Object.values(userProgress).filter(p => p.enrolled).length}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Total Challenge XP</span>\n                  <span className=\"font-bold text-yellow-400\">\n                    {Object.values(userProgress).reduce((sum, p) => sum + (p.totalXP || 0), 0)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Best Rank</span>\n                  <span className=\"font-bold text-purple-400\">\n                    #{Math.min(...completedChallenges.map(c => c.rank))}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Achievements */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-lg font-bold mb-4\">Recent Achievements</h3>\n              <div className=\"space-y-3\">\n                {completedChallenges.map(challenge => (\n                  <div key={challenge.id} className=\"bg-white/10 rounded-lg p-3\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <span className=\"text-lg\">{challenge.badge.split(' ')[0]}</span>\n                      <span className=\"font-semibold text-sm\">{challenge.badge.split(' ').slice(1).join(' ')}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-300\">\n                      Rank #{challenge.rank} • {challenge.finalScore}/{challenge.maxScore} XP\n                    </div>\n                    <div className=\"text-xs text-gray-400\">\n                      {formatDate(challenge.completedDate)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Community Leaderboard Preview */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-lg font-bold mb-4\">This Week's Leaders</h3>\n              <div className=\"space-y-2\">\n                {[\n                  { rank: 1, name: 'Alex Chen', xp: 890, badge: '👑' },\n                  { rank: 2, name: 'Sarah M.', xp: 845, badge: '🥈' },\n                  { rank: 3, name: 'Mike Johnson', xp: 820, badge: '🥉' },\n                  { rank: 4, name: 'You', xp: 487, badge: '🔥' },\n                  { rank: 5, name: 'Emma Wilson', xp: 445, badge: '⭐' }\n                ].map(player => (\n                  <div key={player.rank} className={`flex items-center space-x-3 p-2 rounded-lg ${\n                    player.name === 'You' ? 'bg-blue-600/20 border border-blue-400' : ''\n                  }`}>\n                    <span className=\"text-lg\">{player.badge}</span>\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-sm\">{player.name}</div>\n                      <div className=\"text-xs text-gray-400\">{player.xp} XP</div>\n                    </div>\n                    <div className=\"text-xs text-gray-400\">#{player.rank}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Join Challenge Modal */}\n        {showJoinModal && selectedChallenge && (\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n            <div className=\"bg-gradient-to-br from-gray-900 to-blue-900 rounded-2xl max-w-md w-full p-6\">\n              <h3 className=\"text-2xl font-bold mb-4\">Join Challenge</h3>\n              <div className=\"text-center mb-6\">\n                <div className=\"text-4xl mb-2\">🏆</div>\n                <h4 className=\"text-xl font-bold mb-2\">{selectedChallenge.title}</h4>\n                <p className=\"text-gray-300 mb-4\">{selectedChallenge.description}</p>\n                \n                <div className=\"bg-white/10 rounded-lg p-4 mb-4\">\n                  <div className=\"text-yellow-400 font-bold text-lg\">{selectedChallenge.xpReward} XP</div>\n                  <div className=\"text-sm text-gray-300\">Completion Reward</div>\n                </div>\n              </div>\n              \n              <p className=\"text-sm text-gray-400 mb-6 text-center\">\n                Are you ready to commit to this {selectedChallenge.duration} challenge?\n              </p>\n              \n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => setShowJoinModal(false)}\n                  className=\"flex-1 bg-gray-600 hover:bg-gray-700 py-3 rounded-lg font-semibold transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={confirmJoinChallenge}\n                  className=\"flex-1 bg-green-600 hover:bg-green-700 py-3 rounded-lg font-semibold transition-colors\"\n                >\n                  Join Challenge!\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Daily Tasks Modal (when active challenge is expanded) */}\n        {activeChallenge && userProgress[activeChallenge.id]?.enrolled && (\n          <div className=\"mt-8 bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n            <h3 className=\"text-xl font-bold mb-4\">Daily Tasks - {activeChallenge.title}</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {activeChallenge.dailyTasks.map((task, index) => (\n                <div\n                  key={index}\n                  className={`p-4 rounded-lg border transition-all ${\n                    task.completed\n                      ? 'bg-green-600/20 border-green-400'\n                      : 'bg-white/10 border-white/20 hover:bg-white/20'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm font-semibold\">Day {task.day}</span>\n                    <span className=\"text-yellow-400 text-sm font-bold\">{task.xp} XP</span>\n                  </div>\n                  <p className=\"text-sm mb-3\">{task.task}</p>\n                  {!task.completed ? (\n                    <button\n                      onClick={() => completeTask(activeChallenge.id, index)}\n                      className=\"w-full bg-blue-600 hover:bg-blue-700 py-2 rounded-lg text-sm font-semibold transition-colors\"\n                    >\n                      Complete Task\n                    </button>\n                  ) : (\n                    <div className=\"flex items-center justify-center space-x-2 text-green-300\">\n                      <span>✓</span>\n                      <span className=\"text-sm font-semibold\">Completed</span>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyChallenges;","import React, { useState, useEffect } from 'react';\n\nconst OfflineWorkouts = ({ onBack }) => {\n  const [downloadedWorkouts, setDownloadedWorkouts] = useState([]);\n  const [availableWorkouts, setAvailableWorkouts] = useState([]);\n  const [downloading, setDownloading] = useState({});\n  const [storageUsed, setStorageUsed] = useState(0);\n  const [activeWorkout, setActiveWorkout] = useState(null);\n\n  // Sample available workouts for download\n  const sampleWorkouts = [\n    {\n      id: 'speed-fundamentals',\n      title: 'Speed Training Fundamentals',\n      description: 'Complete 30-minute speed training program',\n      category: 'speed',\n      duration: '30 mins',\n      difficulty: 'Intermediate',\n      exercises: 8,\n      size: '2.3 MB',\n      estimatedTime: 30,\n      equipment: 'Cones, Timer',\n      exercises_detail: [\n        { name: 'Dynamic Warm-up', duration: 300, type: 'warmup' },\n        { name: 'Acceleration Sprints', duration: 600, type: 'speed' },\n        { name: 'Flying 20s', duration: 480, type: 'speed' },\n        { name: 'Deceleration Control', duration: 420, type: 'technique' },\n        { name: 'Change of Direction', duration: 540, type: 'agility' },\n        { name: 'Sprint Endurance', duration: 360, type: 'endurance' },\n        { name: 'Recovery Jog', duration: 240, type: 'recovery' },\n        { name: 'Cool Down Stretch', duration: 270, type: 'cooldown' }\n      ]\n    },\n    {\n      id: 'route-mastery',\n      title: 'Route Running Mastery',\n      description: 'Master essential flag football routes',\n      category: 'routes',\n      duration: '25 mins',\n      difficulty: 'Advanced',\n      exercises: 6,\n      size: '1.8 MB',\n      estimatedTime: 25,\n      equipment: 'Cones, Flags',\n      exercises_detail: [\n        { name: 'Route Warm-up', duration: 300, type: 'warmup' },\n        { name: 'Slant Progression', duration: 420, type: 'technique' },\n        { name: 'Out Routes', duration: 480, type: 'technique' },\n        { name: 'Comeback Routes', duration: 360, type: 'technique' },\n        { name: 'Double Moves', duration: 540, type: 'advanced' },\n        { name: 'Route Combinations', duration: 400, type: 'game-sim' }\n      ]\n    },\n    {\n      id: 'strength-circuit',\n      title: 'Bodyweight Strength Circuit',\n      description: 'No-equipment strength training',\n      category: 'strength',\n      duration: '20 mins',\n      difficulty: 'Beginner',\n      exercises: 5,\n      size: '1.2 MB',\n      estimatedTime: 20,\n      equipment: 'None',\n      exercises_detail: [\n        { name: 'Dynamic Warm-up', duration: 240, type: 'warmup' },\n        { name: 'Upper Body Circuit', duration: 480, type: 'strength' },\n        { name: 'Core Blast', duration: 360, type: 'core' },\n        { name: 'Lower Body Power', duration: 420, type: 'strength' },\n        { name: 'Cool Down', duration: 300, type: 'cooldown' }\n      ]\n    },\n    {\n      id: 'agility-ladder',\n      title: 'Agility & Footwork Drills',\n      description: 'Improve footwork and coordination',\n      category: 'agility',\n      duration: '15 mins',\n      difficulty: 'Intermediate',\n      exercises: 4,\n      size: '0.9 MB',\n      estimatedTime: 15,\n      equipment: 'Agility Ladder',\n      exercises_detail: [\n        { name: 'Ladder Warm-up', duration: 180, type: 'warmup' },\n        { name: 'Basic Patterns', duration: 300, type: 'footwork' },\n        { name: 'Advanced Sequences', duration: 360, type: 'coordination' },\n        { name: 'Speed Ladder', duration: 240, type: 'speed' }\n      ]\n    }\n  ];\n\n  useEffect(() => {\n    // Load downloaded workouts from localStorage\n    const stored = localStorage.getItem('downloadedWorkouts');\n    if (stored) {\n      try {\n        const workouts = JSON.parse(stored);\n        setDownloadedWorkouts(workouts);\n        calculateStorageUsed(workouts);\n      } catch (error) {\n        console.error('Failed to load downloaded workouts:', error);\n      }\n    }\n    \n    setAvailableWorkouts(sampleWorkouts);\n  }, []);\n\n  const calculateStorageUsed = (workouts) => {\n    const totalSize = workouts.reduce((sum, workout) => {\n      const size = parseFloat(workout.size.replace(' MB', ''));\n      return sum + size;\n    }, 0);\n    setStorageUsed(totalSize);\n  };\n\n  const downloadWorkout = async (workout) => {\n    setDownloading(prev => ({ ...prev, [workout.id]: true }));\n    \n    try {\n      // Simulate download delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const downloadedWorkout = {\n        ...workout,\n        downloadedAt: new Date().toISOString(),\n        offline: true\n      };\n      \n      const updated = [...downloadedWorkouts, downloadedWorkout];\n      setDownloadedWorkouts(updated);\n      localStorage.setItem('downloadedWorkouts', JSON.stringify(updated));\n      calculateStorageUsed(updated);\n      \n    } catch (error) {\n      console.error('Download failed:', error);\n    } finally {\n      setDownloading(prev => ({ ...prev, [workout.id]: false }));\n    }\n  };\n\n  const deleteWorkout = (workoutId) => {\n    const updated = downloadedWorkouts.filter(w => w.id !== workoutId);\n    setDownloadedWorkouts(updated);\n    localStorage.setItem('downloadedWorkouts', JSON.stringify(updated));\n    calculateStorageUsed(updated);\n  };\n\n  const isDownloaded = (workoutId) => {\n    return downloadedWorkouts.some(w => w.id === workoutId);\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-500';\n      case 'Intermediate': return 'bg-yellow-500';\n      case 'Advanced': return 'bg-red-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'speed': return '⚡';\n      case 'routes': return '🏃';\n      case 'strength': return '💪';\n      case 'agility': return '🔥';\n      default: return '🏈';\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (activeWorkout) {\n    return (\n      <WorkoutPlayer \n        workout={activeWorkout}\n        onBack={() => setActiveWorkout(null)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Training</span>\n          </button>\n          \n          {/* Storage Usage */}\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-400\">{storageUsed.toFixed(1)} MB</div>\n            <div className=\"text-sm text-blue-200\">Storage Used</div>\n          </div>\n        </div>\n\n        <h1 className=\"text-3xl font-bold mb-2\">Offline Workouts</h1>\n        <p className=\"text-blue-200 mb-8\">Download workouts for training anywhere, anytime - no internet required</p>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Downloaded Workouts */}\n          <div className=\"lg:col-span-2\">\n            <h2 className=\"text-2xl font-bold mb-6\">Your Downloaded Workouts</h2>\n            \n            {downloadedWorkouts.length === 0 ? (\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 text-center\">\n                <div className=\"text-6xl mb-4\">📱</div>\n                <h3 className=\"text-xl font-bold mb-2\">No Offline Workouts Yet</h3>\n                <p className=\"text-blue-200 mb-4\">Download workouts below to train without internet connection</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {downloadedWorkouts.map(workout => (\n                  <div\n                    key={workout.id}\n                    className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 transition-all hover:bg-white/20\"\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-3 mb-2\">\n                          <span className=\"text-2xl\">{getCategoryIcon(workout.category)}</span>\n                          <h3 className=\"text-xl font-bold\">{workout.title}</h3>\n                          <span className={`px-2 py-1 rounded-full text-xs font-semibold ${getDifficultyColor(workout.difficulty)}`}>\n                            {workout.difficulty}\n                          </span>\n                          <span className=\"bg-green-600 px-2 py-1 rounded-full text-xs font-semibold\">\n                            ✓ Offline\n                          </span>\n                        </div>\n                        \n                        <p className=\"text-gray-300 mb-3\">{workout.description}</p>\n                        \n                        <div className=\"grid grid-cols-4 gap-4 text-sm mb-4\">\n                          <div>\n                            <span className=\"text-gray-400\">Duration:</span>\n                            <div className=\"font-semibold\">{workout.duration}</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-400\">Exercises:</span>\n                            <div className=\"font-semibold\">{workout.exercises}</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-400\">Equipment:</span>\n                            <div className=\"font-semibold\">{workout.equipment}</div>\n                          </div>\n                          <div>\n                            <span className=\"text-gray-400\">Downloaded:</span>\n                            <div className=\"font-semibold\">{formatDate(workout.downloadedAt)}</div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex space-x-3\">\n                          <button\n                            onClick={() => setActiveWorkout(workout)}\n                            className=\"flex-1 bg-green-600 hover:bg-green-700 py-2 rounded-lg font-semibold transition-colors\"\n                          >\n                            Start Workout\n                          </button>\n                          <button\n                            onClick={() => deleteWorkout(workout.id)}\n                            className=\"px-4 py-2 bg-red-600 hover:bg-red-700 rounded-lg font-semibold transition-colors\"\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Available Downloads */}\n          <div>\n            <h2 className=\"text-xl font-bold mb-6\">Available Downloads</h2>\n            <div className=\"space-y-4\">\n              {availableWorkouts.map(workout => (\n                <div\n                  key={workout.id}\n                  className=\"bg-white/10 backdrop-blur-sm rounded-lg p-4\"\n                >\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <span className=\"text-xl\">{getCategoryIcon(workout.category)}</span>\n                    <h3 className=\"font-bold text-sm\">{workout.title}</h3>\n                  </div>\n                  \n                  <div className=\"text-xs text-gray-300 mb-3\">\n                    {workout.duration} • {workout.exercises} exercises • {workout.size}\n                  </div>\n                  \n                  {isDownloaded(workout.id) ? (\n                    <div className=\"flex items-center space-x-2 text-green-300 text-sm\">\n                      <span>✓</span>\n                      <span>Downloaded</span>\n                    </div>\n                  ) : downloading[workout.id] ? (\n                    <div className=\"flex items-center space-x-2 text-blue-300 text-sm\">\n                      <div className=\"w-4 h-4 border-2 border-blue-300 border-t-transparent rounded-full animate-spin\"></div>\n                      <span>Downloading...</span>\n                    </div>\n                  ) : (\n                    <button\n                      onClick={() => downloadWorkout(workout)}\n                      className=\"w-full bg-blue-600 hover:bg-blue-700 py-2 rounded-lg text-sm font-semibold transition-colors\"\n                    >\n                      Download\n                    </button>\n                  )}\n                </div>\n              ))}\n            </div>\n            \n            {/* Storage Info */}\n            <div className=\"mt-6 bg-white/10 backdrop-blur-sm rounded-lg p-4\">\n              <h3 className=\"font-bold mb-2\">Storage Info</h3>\n              <div className=\"text-sm text-gray-300\">\n                <div className=\"flex justify-between mb-1\">\n                  <span>Used:</span>\n                  <span>{storageUsed.toFixed(1)} MB</span>\n                </div>\n                <div className=\"flex justify-between mb-1\">\n                  <span>Available:</span>\n                  <span>{(100 - storageUsed).toFixed(1)} MB</span>\n                </div>\n                <div className=\"w-full bg-gray-700 rounded-full h-2 mt-2\">\n                  <div \n                    className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                    style={{ width: `${Math.min((storageUsed / 100) * 100, 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Workout Player Component with Integrated Timer\nconst WorkoutPlayer = ({ workout, onBack }) => {\n  const [currentExercise, setCurrentExercise] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(workout.exercises_detail[0]?.duration || 0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning && !isPaused && timeRemaining > 0) {\n      interval = setInterval(() => {\n        setTimeRemaining(prev => {\n          if (prev <= 1) {\n            // Move to next exercise\n            if (currentExercise < workout.exercises_detail.length - 1) {\n              setCurrentExercise(prev => prev + 1);\n              return workout.exercises_detail[currentExercise + 1].duration;\n            } else {\n              // Workout completed\n              setCompleted(true);\n              setIsRunning(false);\n              return 0;\n            }\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, isPaused, timeRemaining, currentExercise, workout.exercises_detail]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getTotalProgress = () => {\n    const totalDuration = workout.exercises_detail.reduce((sum, ex) => sum + ex.duration, 0);\n    const completedDuration = workout.exercises_detail\n      .slice(0, currentExercise)\n      .reduce((sum, ex) => sum + ex.duration, 0);\n    const currentProgress = workout.exercises_detail[currentExercise].duration - timeRemaining;\n    return ((completedDuration + currentProgress) / totalDuration) * 100;\n  };\n\n  const startWorkout = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n  };\n\n  const pauseWorkout = () => {\n    setIsPaused(!isPaused);\n  };\n\n  const skipExercise = () => {\n    if (currentExercise < workout.exercises_detail.length - 1) {\n      setCurrentExercise(prev => prev + 1);\n      setTimeRemaining(workout.exercises_detail[currentExercise + 1].duration);\n    }\n  };\n\n  const resetWorkout = () => {\n    setCurrentExercise(0);\n    setTimeRemaining(workout.exercises_detail[0].duration);\n    setIsRunning(false);\n    setIsPaused(false);\n    setCompleted(false);\n  };\n\n  const currentEx = workout.exercises_detail[currentExercise];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Workouts</span>\n          </button>\n          \n          <div className=\"text-center\">\n            <div className=\"text-sm text-blue-200\">Offline Workout</div>\n            <div className=\"text-lg font-bold\">{workout.title}</div>\n          </div>\n        </div>\n\n        {/* Progress Overview */}\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 mb-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <span className=\"text-sm text-gray-300\">Overall Progress</span>\n            <span className=\"text-sm text-gray-300\">\n              {currentExercise + 1} of {workout.exercises_detail.length}\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-700 rounded-full h-3 mb-2\">\n            <div \n              className=\"bg-gradient-to-r from-blue-500 to-green-500 h-3 rounded-full transition-all duration-300\"\n              style={{ width: `${getTotalProgress()}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Current Exercise */}\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 mb-6 text-center\">\n          <h2 className=\"text-3xl font-bold mb-2\">{currentEx.name}</h2>\n          <div className=\"text-6xl font-bold text-blue-400 mb-4\">\n            {formatTime(timeRemaining)}\n          </div>\n          \n          <div className=\"flex justify-center space-x-4 mb-6\">\n            {!isRunning && !completed && (\n              <button\n                onClick={startWorkout}\n                className=\"bg-green-600 hover:bg-green-700 px-8 py-3 rounded-lg font-semibold transition-colors\"\n              >\n                Start Workout\n              </button>\n            )}\n            \n            {isRunning && (\n              <button\n                onClick={pauseWorkout}\n                className=\"bg-yellow-600 hover:bg-yellow-700 px-8 py-3 rounded-lg font-semibold transition-colors\"\n              >\n                {isPaused ? 'Resume' : 'Pause'}\n              </button>\n            )}\n            \n            {isRunning && (\n              <button\n                onClick={skipExercise}\n                className=\"bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-semibold transition-colors\"\n              >\n                Skip\n              </button>\n            )}\n            \n            <button\n              onClick={resetWorkout}\n              className=\"bg-gray-600 hover:bg-gray-700 px-6 py-3 rounded-lg font-semibold transition-colors\"\n            >\n              Reset\n            </button>\n          </div>\n\n          {completed && (\n            <div className=\"bg-green-600/20 border border-green-400 rounded-lg p-6\">\n              <div className=\"text-4xl mb-2\">🎉</div>\n              <h3 className=\"text-xl font-bold text-green-300 mb-2\">Workout Completed!</h3>\n              <p className=\"text-green-200\">Great job completing {workout.title}!</p>\n            </div>\n          )}\n        </div>\n\n        {/* Exercise List */}\n        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n          <h3 className=\"text-xl font-bold mb-4\">Exercise Schedule</h3>\n          <div className=\"space-y-2\">\n            {workout.exercises_detail.map((exercise, index) => (\n              <div\n                key={index}\n                className={`flex items-center justify-between p-3 rounded-lg transition-all ${\n                  index === currentExercise\n                    ? 'bg-blue-600/30 border border-blue-400'\n                    : index < currentExercise\n                    ? 'bg-green-600/20 border border-green-400'\n                    : 'bg-white/10'\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                    index < currentExercise\n                      ? 'bg-green-500 text-white'\n                      : index === currentExercise\n                      ? 'bg-blue-500 text-white'\n                      : 'bg-gray-600 text-gray-300'\n                  }`}>\n                    {index < currentExercise ? '✓' : index + 1}\n                  </div>\n                  <span className=\"font-semibold\">{exercise.name}</span>\n                </div>\n                <span className=\"text-sm text-gray-300\">\n                  {formatTime(exercise.duration)}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OfflineWorkouts;","import React, { useState, useEffect, useRef } from 'react';\nimport { usePocket } from '../contexts/PocketContext';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport TrainingSession from '../components/TrainingSession';\nimport CommunityHub from '../components/CommunityHub';\nimport BiometricIntegration from '../components/BiometricIntegration';\nimport DrillLibrary from '../components/DrillLibrary';\nimport DrillDetail from '../components/DrillDetail';\nimport TrainingCalendar from '../components/TrainingCalendar';\nimport ProgressTracker from '../components/ProgressTracker';\nimport WeeklyChallenges from '../components/WeeklyChallenges';\nimport OfflineWorkouts from '../components/OfflineWorkouts';\n\nconst TrainingView = () => {\n  const { user } = usePocket();\n  const [activeCategory, setActiveCategory] = useState('routes');\n  const [currentStreak, setCurrentStreak] = useState(7);\n  const [playerLevel, setPlayerLevel] = useState({ name: 'Route Runner Pro', xp: 2400, nextLevel: 3000 });\n  const [aiCoachMessage, setAiCoachMessage] = useState('');\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [communityFeed, setCommunityFeed] = useState([]);\n  const [dailyChallenge, setDailyChallenge] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showTrainingSession, setShowTrainingSession] = useState(false);\n  const [showCommunityHub, setShowCommunityHub] = useState(false);\n  const [showDrillLibrary, setShowDrillLibrary] = useState(false);\n  const [selectedDrill, setSelectedDrill] = useState(null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showProgressTracker, setShowProgressTracker] = useState(false);\n  const [showWeeklyChallenges, setShowWeeklyChallenges] = useState(false);\n  const [showOfflineWorkouts, setShowOfflineWorkouts] = useState(false);\n  const [scheduledWorkouts, setScheduledWorkouts] = useState([]);\n  const [biometricRecommendations, setBiometricRecommendations] = useState([]);\n  const videoRef = useRef(null);\n\n  // Training categories with enhanced data\n  const trainingCategories = {\n    routes: {\n      name: 'Route Running',\n      icon: '🏃',\n      color: 'from-blue-500 to-blue-600',\n      routes: 15,\n      completed: 8,\n      difficulty: 'Intermediate',\n      nextUnlock: 'Double Move Routes'\n    },\n    plyometrics: {\n      name: 'Plyometrics',\n      icon: '⚡',\n      color: 'from-yellow-500 to-orange-500',\n      routes: 12,\n      completed: 5,\n      difficulty: 'Beginner',\n      nextUnlock: 'Explosive Power Drills'\n    },\n    sprints: {\n      name: 'Speed Training',\n      icon: '🏃‍♂️',\n      color: 'from-red-500 to-pink-500',\n      routes: 8,\n      completed: 6,\n      difficulty: 'Advanced',\n      nextUnlock: 'Elite Sprint Mechanics'\n    },\n    catching: {\n      name: 'Catching',\n      icon: '🎯',\n      color: 'from-green-500 to-emerald-500',\n      routes: 10,\n      completed: 4,\n      difficulty: 'Intermediate',\n      nextUnlock: 'One-Handed Catches'\n    },\n    strength: {\n      name: 'Strength',\n      icon: '💪',\n      color: 'from-purple-500 to-indigo-500',\n      routes: 20,\n      completed: 12,\n      difficulty: 'Beginner',\n      nextUnlock: 'Power Lifting Fundamentals'\n    },\n    recovery: {\n      name: 'Recovery',\n      icon: '🧘',\n      color: 'from-teal-500 to-cyan-500',\n      routes: 6,\n      completed: 3,\n      difficulty: 'Beginner',\n      nextUnlock: 'Advanced Mobility Work'\n    }\n  };\n\n  // AI Coach messages based on user progress and time\n  const aiCoachMessages = [\n    \"Ready to dominate today's route session? Your precision has improved 23% this week! 🔥\",\n    \"I noticed you're strongest in the mornings. Perfect time for speed work! ⚡\",\n    \"Your form on that last slant route was textbook perfect. Let's build on that momentum! 🎯\",\n    \"Based on your sleep data, I recommend focusing on technique over intensity today. Smart training wins games! 🧠\",\n    \"You're 2 workouts away from unlocking Elite Sprint Mechanics. Push through! 💪\"\n  ];\n\n  // Sample community feed\n  const sampleCommunityFeed = [\n    {\n      id: 1,\n      user: 'Alex M.',\n      avatar: '🏃‍♂️',\n      action: 'crushed their 40-yard dash',\n      time: '2m ago',\n      achievement: 'New Personal Best: 4.3s',\n      likes: 12\n    },\n    {\n      id: 2,\n      user: 'Maya R.',\n      avatar: '⚡',\n      action: 'completed Week 3 Plyometrics',\n      time: '15m ago',\n      achievement: 'Consistency Streak: 14 days',\n      likes: 8\n    },\n    {\n      id: 3,\n      user: 'Coach Johnson',\n      avatar: '🎯',\n      action: 'shared a new route breakdown',\n      time: '1h ago',\n      achievement: 'Pro Tip: Post Route Timing',\n      likes: 24\n    }\n  ];\n\n  // Daily challenges\n  const dailyChallenges = [\n    {\n      title: 'Speed Demon Challenge',\n      description: 'Complete 5 sprint drills with perfect form',\n      reward: '50 XP + Speed Badge',\n      difficulty: 'Medium',\n      timeLeft: '6h 23m'\n    },\n    {\n      title: 'Route Master',\n      description: 'Run 3 different routes with 90%+ accuracy',\n      reward: '75 XP + Precision Badge',\n      difficulty: 'Hard',\n      timeLeft: '12h 45m'\n    }\n  ];\n\n  // Achievements system\n  const achievements = [\n    { name: 'Speed Demon', icon: '⚡', unlocked: true },\n    { name: 'Perfect Form', icon: '🎯', unlocked: true },\n    { name: 'Team Player', icon: '🌟', unlocked: false },\n    { name: 'Consistency King', icon: '🔥', unlocked: true },\n    { name: 'Route Master', icon: '🏃', unlocked: false }\n  ];\n\n  useEffect(() => {\n    // Simulate loading\n    setTimeout(() => setIsLoading(false), 1500);\n    \n    // Set random AI coach message\n    setAiCoachMessage(aiCoachMessages[Math.floor(Math.random() * aiCoachMessages.length)]);\n    \n    // Set community feed\n    setCommunityFeed(sampleCommunityFeed);\n    \n    // Set daily challenge\n    setDailyChallenge(dailyChallenges[Math.floor(Math.random() * dailyChallenges.length)]);\n  }, []);\n\n  const handleStartTraining = (category) => {\n    setActiveCategory(category);\n    setShowTrainingSession(true);\n    setShowAchievement(true);\n    setTimeout(() => setShowAchievement(false), 3000);\n  };\n\n  const handleCompleteTraining = (results) => {\n    setShowTrainingSession(false);\n    // Update user progress, XP, etc.\n    console.log('Training completed:', results);\n    setPlayerLevel(prev => ({\n      ...prev,\n      xp: prev.xp + 100 // Add XP for completion\n    }));\n  };\n\n  const handleSelectDrill = (drill) => {\n    setSelectedDrill(drill);\n  };\n\n  const handleScheduleWorkout = (workout) => {\n    setScheduledWorkouts(prev => [...prev, workout]);\n    console.log('Scheduled workout:', workout);\n  };\n\n  const progressPercentage = (playerLevel.xp / playerLevel.nextLevel) * 100;\n\n  // Show drill detail if selected\n  if (selectedDrill) {\n    return (\n      <DrillDetail\n        drill={selectedDrill}\n        onBack={() => setSelectedDrill(null)}\n        onStartDrill={(drill) => console.log('Starting drill:', drill)}\n      />\n    );\n  }\n\n  // Show drill library if active\n  if (showDrillLibrary) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <button\n              onClick={() => setShowDrillLibrary(false)}\n              className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n              </svg>\n              <span>Back to Training</span>\n            </button>\n          </div>\n          <DrillLibrary \n            selectedCategory={activeCategory}\n            onSelectDrill={handleSelectDrill}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // Show calendar if active\n  if (showCalendar) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <button\n              onClick={() => setShowCalendar(false)}\n              className=\"flex items-center space-x-2 text-blue-200 hover:text-white transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n              </svg>\n              <span>Back to Training</span>\n            </button>\n          </div>\n          <TrainingCalendar \n            scheduledWorkouts={scheduledWorkouts}\n            onScheduleWorkout={handleScheduleWorkout}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // Show progress tracker if active\n  if (showProgressTracker) {\n    return (\n      <ProgressTracker onBack={() => setShowProgressTracker(false)} />\n    );\n  }\n\n  // Show weekly challenges if active\n  if (showWeeklyChallenges) {\n    return (\n      <WeeklyChallenges onBack={() => setShowWeeklyChallenges(false)} />\n    );\n  }\n\n  // Show offline workouts if active\n  if (showOfflineWorkouts) {\n    return (\n      <OfflineWorkouts onBack={() => setShowOfflineWorkouts(false)} />\n    );\n  }\n\n  // Show training session if active\n  if (showTrainingSession) {\n    return (\n      <TrainingSession\n        category={activeCategory}\n        onBack={() => setShowTrainingSession(false)}\n        onComplete={handleCompleteTraining}\n      />\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <LoadingSpinner />\n          <p className=\"text-white mt-4 text-lg\">Preparing your personalized training experience...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 text-white\">\n      {/* Achievement Popup */}\n      {showAchievement && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\">\n          <div className=\"bg-gradient-to-r from-yellow-400 to-orange-500 p-8 rounded-3xl transform animate-bounce\">\n            <div className=\"text-center\">\n              <div className=\"text-6xl mb-4\">🏆</div>\n              <h3 className=\"text-2xl font-bold text-white mb-2\">Achievement Unlocked!</h3>\n              <p className=\"text-white opacity-90\">Training Session Started</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Header with AI Coach */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h1 className=\"text-4xl font-bold bg-gradient-to-r from-white to-blue-200 bg-clip-text text-transparent\">\n                Training Ecosystem\n              </h1>\n              <p className=\"text-blue-200 mt-2\">AI-Powered Flag Football Mastery</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setShowCalendar(true)}\n                className=\"flex items-center space-x-2 bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                <span>Calendar</span>\n              </button>\n              <button\n                onClick={() => setShowDrillLibrary(true)}\n                className=\"flex items-center space-x-2 bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                </svg>\n                <span>Drills</span>\n              </button>\n              <button\n                onClick={() => setShowProgressTracker(true)}\n                className=\"flex items-center space-x-2 bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                <span>Progress</span>\n              </button>\n              <button\n                onClick={() => setShowWeeklyChallenges(true)}\n                className=\"flex items-center space-x-2 bg-orange-600 hover:bg-orange-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span>Challenges</span>\n              </button>\n              <button\n                onClick={() => setShowOfflineWorkouts(true)}\n                className=\"flex items-center space-x-2 bg-teal-600 hover:bg-teal-700 px-4 py-2 rounded-lg font-semibold transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n                <span>Offline</span>\n              </button>\n              <div className=\"text-right\">\n                <div className=\"text-sm text-blue-200\">Current Streak</div>\n                <div className=\"text-2xl font-bold text-yellow-400\">{currentStreak} days 🔥</div>\n              </div>\n            </div>\n          </div>\n\n          {/* AI Coach Section */}\n          <div className=\"bg-gradient-to-r from-indigo-600 to-purple-600 rounded-3xl p-6 mb-6 relative overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-r from-white/10 to-transparent\"></div>\n            <div className=\"relative flex items-start space-x-4\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center text-2xl animate-pulse\">\n                🤖\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"text-xl font-bold mb-2\">Your AI Coach</h3>\n                <p className=\"text-blue-100 text-lg leading-relaxed\">{aiCoachMessage}</p>\n                <button className=\"mt-4 bg-white/20 hover:bg-white/30 px-6 py-2 rounded-full text-sm font-semibold transition-all backdrop-blur-sm\">\n                  Ask Coach a Question\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Player Progress */}\n          <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 mb-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div>\n                <h3 className=\"text-xl font-bold\">{playerLevel.name}</h3>\n                <p className=\"text-blue-200\">Level 12 • {playerLevel.xp}/{playerLevel.nextLevel} XP</p>\n              </div>\n              <div className=\"flex space-x-2\">\n                {achievements.map((achievement, index) => (\n                  <div\n                    key={index}\n                    className={`w-10 h-10 rounded-full flex items-center justify-center text-sm ${\n                      achievement.unlocked \n                        ? 'bg-gradient-to-br from-yellow-400 to-orange-500' \n                        : 'bg-gray-600'\n                    }`}\n                    title={achievement.name}\n                  >\n                    {achievement.icon}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"w-full bg-gray-700 rounded-full h-3 mb-2\">\n              <div \n                className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-3 rounded-full transition-all duration-1000\"\n                style={{ width: `${progressPercentage}%` }}\n              ></div>\n            </div>\n            <p className=\"text-sm text-blue-200\">\n              {playerLevel.nextLevel - playerLevel.xp} XP to next level\n            </p>\n          </div>\n        </div>\n\n        {/* Main Content Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Training Categories - Main Content */}\n          <div className=\"lg:col-span-3\">\n            {/* Daily Challenge */}\n            {dailyChallenge && (\n              <div className=\"bg-gradient-to-r from-red-500 to-pink-500 rounded-2xl p-6 mb-6 relative overflow-hidden\">\n                <div className=\"absolute inset-0 bg-gradient-to-r from-white/10 to-transparent\"></div>\n                <div className=\"relative\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"text-xl font-bold\">🎯 Daily Challenge</h3>\n                    <span className=\"bg-white/20 px-3 py-1 rounded-full text-sm\">\n                      {dailyChallenge.timeLeft} left\n                    </span>\n                  </div>\n                  <h4 className=\"text-lg font-semibold mb-2\">{dailyChallenge.title}</h4>\n                  <p className=\"text-pink-100 mb-4\">{dailyChallenge.description}</p>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-yellow-300 font-semibold\">{dailyChallenge.reward}</span>\n                    <button className=\"bg-white/20 hover:bg-white/30 px-6 py-2 rounded-full font-semibold transition-all\">\n                      Accept Challenge\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Training Categories Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mb-6\">\n              {Object.entries(trainingCategories).map(([key, category]) => {\n                const completionRate = (category.completed / category.routes) * 100;\n                return (\n                  <div\n                    key={key}\n                    className={`bg-gradient-to-br ${category.color} rounded-2xl p-6 cursor-pointer transform hover:scale-105 transition-all duration-300 hover:shadow-2xl relative overflow-hidden group`}\n                    onClick={() => {\n                      setActiveCategory(key);\n                      handleStartTraining(key);\n                    }}\n                  >\n                    <div className=\"absolute inset-0 bg-gradient-to-r from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\"></div>\n                    <div className=\"relative\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div className=\"text-4xl\">{category.icon}</div>\n                        <div className=\"bg-white/20 px-2 py-1 rounded-full text-xs font-semibold\">\n                          {category.difficulty}\n                        </div>\n                      </div>\n                      <h3 className=\"text-xl font-bold mb-2\">{category.name}</h3>\n                      <div className=\"space-y-2 mb-4\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span>Progress</span>\n                          <span>{category.completed}/{category.routes}</span>\n                        </div>\n                        <div className=\"w-full bg-white/20 rounded-full h-2\">\n                          <div \n                            className=\"bg-white h-2 rounded-full transition-all duration-1000\"\n                            style={{ width: `${completionRate}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                      <div className=\"text-sm opacity-80 mb-3\">\n                        Next unlock: {category.nextUnlock}\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <button \n                          onClick={() => {\n                            setActiveCategory(key);\n                            handleStartTraining(key);\n                          }}\n                          className=\"bg-white/20 hover:bg-white/30 py-2 rounded-full font-semibold transition-all backdrop-blur-sm text-sm\"\n                        >\n                          Start Training\n                        </button>\n                        <button \n                          onClick={() => {\n                            setActiveCategory(key);\n                            setShowDrillLibrary(true);\n                          }}\n                          className=\"bg-blue-600 hover:bg-blue-700 py-2 rounded-full font-semibold transition-all text-sm\"\n                        >\n                          View Drills\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Featured Training Video */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-xl font-bold mb-4\">🎥 Featured Training Video</h3>\n              <div className=\"bg-gray-800 rounded-xl aspect-video mb-4 relative overflow-hidden group cursor-pointer\">\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\"></div>\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm group-hover:scale-110 transition-transform\">\n                    <svg className=\"w-8 h-8 ml-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M8.267 14.68c-.184 0-.308-.018-.372-.036A1.533 1.533 0 0 1 6.5 13.133V6.867a1.533 1.533 0 0 1 1.395-1.511c.064-.018.188-.036.372-.036.964 0 1.733.794 1.733 1.774v5.804c0 .98-.769 1.774-1.733 1.774z\"/>\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"absolute bottom-4 left-4 right-4\">\n                  <h4 className=\"font-semibold text-lg mb-1\">Elite Route Running: The Double Move</h4>\n                  <p className=\"text-sm text-gray-300\">Master the art of deception with NFL techniques</p>\n                </div>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4 text-sm text-gray-300\">\n                  <span>Duration: 12:34</span>\n                  <span>•</span>\n                  <span>Difficulty: Advanced</span>\n                  <span>•</span>\n                  <span>👁 2.3k views</span>\n                </div>\n                <button className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-lg font-semibold transition-colors\">\n                  Watch Now\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Sidebar - Community & Stats */}\n          <div className=\"space-y-6\">\n            {/* Quick Stats */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-lg font-bold mb-4\">📊 This Week</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Workouts</span>\n                  <span className=\"font-bold text-green-400\">5/7</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Total Time</span>\n                  <span className=\"font-bold\">4h 32m</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Avg. Rating</span>\n                  <span className=\"font-bold text-yellow-400\">4.8/5</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-300\">Calories</span>\n                  <span className=\"font-bold text-red-400\">1,247</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Community Feed */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-bold\">👥 Training Buddies</h3>\n                <span className=\"text-green-400 text-sm\">🟢 12 online</span>\n              </div>\n              <div className=\"space-y-4\">\n                {communityFeed.map((activity) => (\n                  <div key={activity.id} className=\"flex items-start space-x-3\">\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-sm\">\n                      {activity.avatar}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm\">\n                        <span className=\"font-semibold\">{activity.user}</span>{' '}\n                        <span className=\"text-gray-300\">{activity.action}</span>\n                      </p>\n                      <p className=\"text-xs text-blue-300 mt-1\">{activity.achievement}</p>\n                      <div className=\"flex items-center justify-between mt-2\">\n                        <span className=\"text-xs text-gray-400\">{activity.time}</span>\n                        <div className=\"flex items-center space-x-1 text-xs text-gray-400\">\n                          <span>❤️</span>\n                          <span>{activity.likes}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <button \n                onClick={() => setShowCommunityHub(true)}\n                className=\"w-full mt-4 bg-blue-600 hover:bg-blue-700 py-2 rounded-lg text-sm font-semibold transition-colors\"\n              >\n                Open Community Hub\n              </button>\n            </div>\n\n            {/* Biometric Integration */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-lg font-bold mb-4\">📊 Biometric Insights</h3>\n              <BiometricIntegration \n                onRecommendation={setBiometricRecommendations}\n              />\n            </div>\n\n            {/* Upcoming Sessions */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6\">\n              <h3 className=\"text-lg font-bold mb-4\">📅 Upcoming</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg\">\n                  <div>\n                    <p className=\"font-semibold text-sm\">Team Practice</p>\n                    <p className=\"text-xs text-gray-300\">Today, 6:00 PM</p>\n                  </div>\n                  <div className=\"text-xs bg-green-600 px-2 py-1 rounded-full\">\n                    Confirmed\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg\">\n                  <div>\n                    <p className=\"font-semibold text-sm\">Speed Training</p>\n                    <p className=\"text-xs text-gray-300\">Tomorrow, 7:00 AM</p>\n                  </div>\n                  <div className=\"text-xs bg-yellow-600 px-2 py-1 rounded-full\">\n                    Pending\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Community Hub Modal */}\n      {showCommunityHub && (\n        <CommunityHub onClose={() => setShowCommunityHub(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default TrainingView;"],"names":["TrainingSession","category","onBack","onComplete","currentDrill","setCurrentDrill","useState","isActive","setIsActive","timer","setTimer","reps","setReps","feedback","setFeedback","formScore","setFormScore","showAROverlay","setShowAROverlay","cameraPermission","setCameraPermission","isAnalyzing","setIsAnalyzing","videoRef","useRef","canvasRef","intervalRef","drillSets","currentDrillSet","drill","analyzeForm","score","feedbackMessages","useEffect","stream","error","startDrill","nextDrill","sum","getDifficultyColor","difficulty","jsxs","jsx","marker","index","point","CommunityHub","onClose","activeTab","setActiveTab","liveUsers","setLiveUsers","challenges","setChallenges","leaderboard","setLeaderboard","groupSessions","setGroupSessions","sampleFeed","sampleLiveUsers","sampleChallenges","sampleLeaderboard","sampleGroupSessions","handleLike","postId","handleJoinChallenge","challengeId","prev","challenge","handleJoinSession","sessionId","renderFeed","post","key","value","renderChallenges","renderLeaderboard","user","renderGroupSessions","session","tab","BiometricIntegration","onRecommendation","heartRate","setHeartRate","isConnected","setIsConnected","sleepScore","setSleepScore","recoveryScore","setRecoveryScore","recommendations","setRecommendations","interval","newRecommendations","generateRecommendations","hr","sleep","recovery","recs","getScoreColor","getRecommendationStyle","type","rec","DrillLibrary","onSelectDrill","selectedCategory","filteredDrills","setFilteredDrills","searchTerm","setSearchTerm","difficultyFilter","setDifficultyFilter","equipmentFilter","setEquipmentFilter","drillDatabase","filtered","getCategoryIcon","e","DrillDetail","onStartDrill","timerRunning","setTimerRunning","timeElapsed","setTimeElapsed","currentStep","setCurrentStep","completed","setCompleted","formatTime","seconds","mins","secs","handleStartTimer","handleCompleteStep","resetDrill","instruction","variation","mistake","TrainingCalendar","onScheduleWorkout","scheduledWorkouts","currentDate","setCurrentDate","selectedDate","setSelectedDate","showScheduleModal","setShowScheduleModal","calendarView","setCalendarView","today","getDaysInMonth","date","year","month","firstDay","daysInMonth","startDayOfWeek","days","i","day","getWorkoutsForDate","dateStr","workout","getWeekDays","startOfWeek","diff","weekDays","formatDate","isToday","isPastDate","navigateCalendar","direction","newDate","handleDateClick","workoutTypes","renderMonthView","dayNames","workouts","isClickable","Fragment","idx","t","renderWeekView","ProgressTracker","photos","setPhotos","setSelectedCategory","showCamera","setShowCamera","capturedPhoto","setCapturedPhoto","comparison","setComparison","showComparison","setShowComparison","fileInputRef","photoCategories","samplePhotos","startCamera","_a","capturePhoto","video","canvas","context","photoData","stopCamera","track","savePhoto","title","notes","newPhoto","c","handleFileUpload","event","file","reader","filteredPhotos","photo","getPhotosByDate","a","b","setUpComparison","_b","WeeklyChallenges","activeChallenge","setActiveChallenge","userProgress","setUserProgress","showJoinModal","setShowJoinModal","selectedChallenge","setSelectedChallenge","weeklyChallenges","completedChallenges","active","initialProgress","getStatusColor","status","getProgressPercentage","progress","confirmJoinChallenge","completeTask","taskIndex","task","currentProgress","isEnrolled","req","p","player","OfflineWorkouts","downloadedWorkouts","setDownloadedWorkouts","availableWorkouts","setAvailableWorkouts","downloading","setDownloading","storageUsed","setStorageUsed","activeWorkout","setActiveWorkout","sampleWorkouts","stored","calculateStorageUsed","totalSize","size","downloadWorkout","resolve","downloadedWorkout","updated","deleteWorkout","workoutId","w","isDownloaded","dateString","WorkoutPlayer","currentExercise","setCurrentExercise","timeRemaining","setTimeRemaining","isRunning","setIsRunning","isPaused","setIsPaused","getTotalProgress","totalDuration","ex","completedDuration","startWorkout","pauseWorkout","skipExercise","resetWorkout","currentEx","exercise","TrainingView","usePocket","activeCategory","setActiveCategory","currentStreak","setCurrentStreak","playerLevel","setPlayerLevel","aiCoachMessage","setAiCoachMessage","showAchievement","setShowAchievement","communityFeed","setCommunityFeed","dailyChallenge","setDailyChallenge","isLoading","setIsLoading","showTrainingSession","setShowTrainingSession","showCommunityHub","setShowCommunityHub","showDrillLibrary","setShowDrillLibrary","selectedDrill","setSelectedDrill","showCalendar","setShowCalendar","showProgressTracker","setShowProgressTracker","showWeeklyChallenges","setShowWeeklyChallenges","showOfflineWorkouts","setShowOfflineWorkouts","setScheduledWorkouts","biometricRecommendations","setBiometricRecommendations","trainingCategories","aiCoachMessages","sampleCommunityFeed","dailyChallenges","achievements","handleStartTraining","handleCompleteTraining","results","handleSelectDrill","handleScheduleWorkout","progressPercentage","LoadingSpinner","achievement","completionRate","activity"],"mappings":"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"}