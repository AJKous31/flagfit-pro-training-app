{"version":3,"file":"RegisterView-ef4d2cb0.js","sources":["../../src/views/RegisterView.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst RegisterView = () => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: 'player'\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  \n  const { register, error, clearError } = useAuth();\n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    const errors = {};\n    \n    if (!formData.firstName.trim()) {\n      errors.firstName = 'First name is required';\n    }\n    \n    if (!formData.lastName.trim()) {\n      errors.lastName = 'Last name is required';\n    }\n    \n    if (!formData.email.trim()) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n    \n    if (!formData.password) {\n      errors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      errors.password = 'Password must be at least 8 characters';\n    }\n    \n    if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Passwords do not match';\n    }\n    \n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    if (validationErrors[name]) {\n      setValidationErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n    \n    if (error) {\n      clearError();\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      const userData = {\n        firstName: formData.firstName, // For name construction in service\n        lastName: formData.lastName,   // For name construction in service\n        email: formData.email,\n        password: formData.password\n        // role removed - not in PocketBase users collection\n      };\n      \n      const result = await register(userData);\n      \n      if (result && result.requiresLogin) {\n        // Registration succeeded but needs login\n        console.log('Registration successful, need to login separately');\n        // For now, redirect to login page with success message\n        navigate('/login', { \n          state: { \n            message: 'Registration successful! Please log in with your new account.',\n            email: formData.email \n          }\n        });\n      } else {\n        // Auto-login succeeded, go to onboarding\n        navigate('/onboarding');\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <div className=\"mx-auto h-12 w-12 bg-green-600 rounded-full flex items-center justify-center\">\n            <svg\n              className=\"h-8 w-8 text-white\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"\n              />\n            </svg>\n          </div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Or{' '}\n            <Link\n              to=\"/login\"\n              className=\"font-medium text-green-600 hover:text-green-500\"\n            >\n              sign in to your existing account\n            </Link>\n          </p>\n        </div>\n        \n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n              {error}\n            </div>\n          )}\n          \n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700\">\n                  First name\n                </label>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  autoComplete=\"given-name\"\n                  required\n                  className={`mt-1 appearance-none relative block w-full px-3 py-2 border ${validationErrors.firstName ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm`}\n                  placeholder=\"First name\"\n                  value={formData.firstName}\n                  onChange={handleChange}\n                />\n                {validationErrors.firstName && (\n                  <p className=\"mt-1 text-sm text-red-600\">{validationErrors.firstName}</p>\n                )}\n              </div>\n              \n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700\">\n                  Last name\n                </label>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  autoComplete=\"family-name\"\n                  required\n                  className={`mt-1 appearance-none relative block w-full px-3 py-2 border ${validationErrors.lastName ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm`}\n                  placeholder=\"Last name\"\n                  value={formData.lastName}\n                  onChange={handleChange}\n                />\n                {validationErrors.lastName && (\n                  <p className=\"mt-1 text-sm text-red-600\">{validationErrors.lastName}</p>\n                )}\n              </div>\n            </div>\n            \n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className={`mt-1 appearance-none relative block w-full px-3 py-2 border ${validationErrors.email ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm`}\n                placeholder=\"Enter your email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              {validationErrors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.email}</p>\n              )}\n            </div>\n            \n            <div>\n              <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700\">\n                Role\n              </label>\n              <select\n                id=\"role\"\n                name=\"role\"\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                value={formData.role}\n                onChange={handleChange}\n              >\n                <option value=\"player\">Player</option>\n                <option value=\"coach\">Coach</option>\n                <option value=\"admin\">Admin</option>\n              </select>\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className={`mt-1 appearance-none relative block w-full px-3 py-2 border ${validationErrors.password ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm`}\n                placeholder=\"Create a password\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n              {validationErrors.password && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.password}</p>\n              )}\n            </div>\n            \n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirm password\n              </label>\n              <input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className={`mt-1 appearance-none relative block w-full px-3 py-2 border ${validationErrors.confirmPassword ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm`}\n                placeholder=\"Confirm your password\"\n                value={formData.confirmPassword}\n                onChange={handleChange}\n              />\n              {validationErrors.confirmPassword && (\n                <p className=\"mt-1 text-sm text-red-600\">{validationErrors.confirmPassword}</p>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? (\n                <div className=\"flex items-center\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Creating account...\n                </div>\n              ) : (\n                'Create account'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterView;"],"names":["RegisterView","formData","setFormData","useState","isSubmitting","setIsSubmitting","validationErrors","setValidationErrors","register","error","clearError","useAuth","navigate","useNavigate","validateForm","errors","handleChange","e","name","value","prev","handleSubmit","userData","result","jsxs","jsx","Link"],"mappings":"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"}